<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Spi_2" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;100&quot;, &quot;Google Chrome&quot;;v=&quot;100&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/100.0.4896.88 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">acme-vib-exp.platform.spisales.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 1:-Launch_Url" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">admin</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">0.0</stringProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corre_CsrfToken_1" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CsrfToken_1</stringProp>
              <stringProp name="RegexExtractor.regex">meta name=&quot;csrf-token&quot; content=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 2:-Sign_In" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin_users/sign_in" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="admin_user[password]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">admin_user[password]</stringProp>
                  <stringProp name="Argument.value">Testpass1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="commit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">commit</stringProp>
                  <stringProp name="Argument.value">Login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="admin_user[email]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">admin_user[email]</stringProp>
                  <stringProp name="Argument.value">joel.sequeira@richardsonsalesperformance.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="admin_user[remember_me]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">admin_user[remember_me]</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                  <stringProp name="Argument.value">${CsrfToken_1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">admin_users/sign_in</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">72613.0</stringProp>
              <stringProp name="ConstantTimer.delay">36306.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 72613 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 3:-OpenAcmeInTable" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">31582.0</stringProp>
              <stringProp name="ConstantTimer.delay">15791</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 31582 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 4:-ClickOnNewCreateUser" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">6287.0</stringProp>
              <stringProp name="ConstantTimer.delay">3143.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 6287 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/filters.json?with_managers=true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="with_managers" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">with_managers</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/filters.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/admin/available_languages.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/admin/available_languages.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users/new" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users/new</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">3285.0</stringProp>
              <stringProp name="ConstantTimer.delay">1642.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 3285 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="user[launch_email_method]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[launch_email_method]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[user_embedded_fields_attributes][0][embedded_field_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[user_embedded_fields_attributes][0][embedded_field_id]</stringProp>
                  <stringProp name="Argument.value">2683296b-048b-45a7-9b37-91d34cbd9a82</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[last_name]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[last_name]</stringProp>
                  <stringProp name="Argument.value">Test567</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="commit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">commit</stringProp>
                  <stringProp name="Argument.value">Save</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[language_preference]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[language_preference]</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[user_embedded_fields_attributes][1][embedded_field_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[user_embedded_fields_attributes][1][embedded_field_id]</stringProp>
                  <stringProp name="Argument.value">da37c59b-fc2f-4484-a3b2-b3f92ad208d3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[user_embedded_fields_attributes][1][embedded_field_value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[user_embedded_fields_attributes][1][embedded_field_value]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[user_embedded_fields_attributes][2][id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[user_embedded_fields_attributes][2][id]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[user_embedded_fields_attributes][0][embedded_field_value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[user_embedded_fields_attributes][0][embedded_field_value]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[status]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[status]</stringProp>
                  <stringProp name="Argument.value">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[user_embedded_fields_attributes][2][embedded_field_value]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[user_embedded_fields_attributes][2][embedded_field_value]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[user_embedded_fields_attributes][2][embedded_field_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[user_embedded_fields_attributes][2][embedded_field_id]</stringProp>
                  <stringProp name="Argument.value">e36e79da-8aef-4c54-bad2-69e681e96eac</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                  <stringProp name="Argument.value">6zIK7jzmuI4uWg7kEhkAoXm7EqMQRAeLJo4rHb9We9HzujLMHxtbZzkFAwKxaFosPquqMC0UzPMBnfJ4czzZpA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[password_confirmation]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[password_confirmation]</stringProp>
                  <stringProp name="Argument.value">Loadtest@789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="launch_email_method_select" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">launch_email_method_select</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[user_embedded_fields_attributes][0][id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[user_embedded_fields_attributes][0][id]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hidden_account_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hidden_account_id</stringProp>
                  <stringProp name="Argument.value">d5d652f7-90b7-4b5b-a44a-ca28830beb61</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[launch_email_schedule_later_at]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[launch_email_schedule_later_at]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[email]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[email]</stringProp>
                  <stringProp name="Argument.value">Test567@gmail.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[first_name]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[first_name]</stringProp>
                  <stringProp name="Argument.value">LoadTest567</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[role]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[role]</stringProp>
                  <stringProp name="Argument.value">participant</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[user_embedded_fields_attributes][1][id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[user_embedded_fields_attributes][1][id]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[manager_user_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[manager_user_id]</stringProp>
                  <stringProp name="Argument.value">2bf27adc-e0b8-434a-ae1a-5e5aa1576258</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[password]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[password]</stringProp>
                  <stringProp name="Argument.value">Loadtest@789</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">43248.0</stringProp>
              <stringProp name="ConstantTimer.delay">21624</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 43248 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 5:-ClickOnUserList" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">46175.0</stringProp>
              <stringProp name="ConstantTimer.delay">23087.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 46175 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/filters.json?with_managers=true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="with_managers" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">with_managers</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/filters.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/admin/available_languages.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/admin/available_languages.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 6:-ClickOnLoginAsUser" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users/ddc0153f-bc19-4d66-a3fe-1188b5c9cce9" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users/ddc0153f-bc19-4d66-a3fe-1188b5c9cce9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">67239.0</stringProp>
              <stringProp name="ConstantTimer.delay">33619.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 67239 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corre_CsrfToken_2" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CsrfToken_2</stringProp>
              <stringProp name="RegexExtractor.regex">meta name=&quot;csrf-token&quot; content=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/users/ddc0153f-bc19-4d66-a3fe-1188b5c9cce9/impersonate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">admin/users/ddc0153f-bc19-4d66-a3fe-1188b5c9cce9/impersonate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_2}</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">20201.0</stringProp>
              <stringProp name="ConstantTimer.delay">10100.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 20201 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corre_CsrfToken_3" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CsrfToken_3</stringProp>
              <stringProp name="RegexExtractor.regex">meta name=&quot;csrf-token&quot; content=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getCourseWithBasicDetails&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query getCourseWithBasicDetails($vibCourseId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    userActivityPoints\n    completedPercentage\n    isCourseEnabled\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;EnrolledCourses&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query EnrolledCourses {\n  enrolledCourses {\n    id\n    title\n    goalDate\n    startDate\n    activityStatus\n    status\n    outlineUrl\n    courseColorCode\n    courseProgress {\n      id\n      canUserSeeNpsSurvey\n      __typename\n    }\n    canStartCourse\n    isFirstLevelOneCollectionCompletedByUser\n    levelCourseType\n    courseIndexPageUrl\n    isCourseEnabled\n    jumpBackIn {\n      courseId\n      jumpBackInPath\n      __typename\n    }\n    currentUserActionPlanTask {\n      id\n      url\n      __typename\n    }\n    checkCourseActivityStartedOrNot\n    completedPercentage\n    courseProgressStats {\n      ... on LevelTwoCourseProgressStats {\n        id\n        overallCourseCompletePercentage\n        __typename\n      }\n      ... on LevelThreeCourseProgressStats {\n        id\n        overallCourseCompletePercentage\n        __typename\n      }\n      ... on LevelFourCourseProgressStats {\n        id\n        overallCourseCompletePercentage\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ActionPlanTasks&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query ActionPlanTasks($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    durationMinutes\n    activityPoints\n    displayTitle\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GET_WIDGETS&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query GET_WIDGETS {\n  widgets {\n    id\n    widgetOne\n    widgetTwo\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;recommendedBlogPosts&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query recommendedBlogPosts {\n  recommendedBlogPosts {\n    title\n    formattedPublishedDate\n    duration\n    url\n    imageUrl\n    imageAltText\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;TeamLeaderBoardMembers&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query TeamLeaderBoardMembers {\n  teamLeaderBoardMembers {\n    user {\n      id\n      fullName\n      profilePictureUrl\n      __typename\n    }\n    courseActivityPoints\n    rank\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GET_USER_COURSE_PERFORMANCE&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query GET_USER_COURSE_PERFORMANCE($vibCourseId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    userPerformanceResult {\n      id\n      userActivityPoints\n      noOfDaysSinceLastActivity\n      assessmentScore\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GET_USER_COURSE_PROGRESS&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query GET_USER_COURSE_PROGRESS($vibCourseId: ID!, $userId: ID) {\n  contentstackCourse(vibCourseId: $vibCourseId, userId: $userId) {\n    id\n    title\n    levelCourseType\n    outlineUrl(userId: $userId)\n    status\n    canStartCourse(userId: $userId)\n    isCourseEnabled\n    userActivityPoints(userId: $userId)\n    courseProgress {\n      id\n      canUserSeeNpsSurvey\n      __typename\n    }\n    levelCourse {\n      ... on LevelTwoCourse {\n        id\n        hasCoreExam\n        hasEnrichmentExam\n        levelTwoCollectionCount\n        completedLevelTwoCollectionCount(userId: $userId)\n        hasCoreContent\n        hasEnrichmentContent\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        hasCoreExam\n        hasEnrichmentExam\n        hasCoreContent\n        hasEnrichmentContent\n        levelTwoCollectionCount\n        completedLevelTwoCollectionCount(userId: $userId)\n        __typename\n      }\n      ... on LevelFourCourse {\n        id\n        hasCoreExam\n        hasEnrichmentExam\n        hasCoreContent\n        hasEnrichmentContent\n        levelTwoCollectionCount\n        completedLevelTwoCollectionCount(userId: $userId)\n        __typename\n      }\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      activityPoints\n      __typename\n    }\n    courseProgressStats {\n      ... on LevelTwoCourseProgressStats {\n        id\n        coreLessonsCompletedPercentage\n        coreLessonsExamCompletedPercentage\n        enrichmentLessonsCompletedPercentage\n        enrichmentLessonsExamCompletedPercentage\n        __typename\n      }\n      ... on LevelThreeCourseProgressStats {\n        id\n        coreLessonsCompletedPercentage\n        coreLessonsExamCompletedPercentage\n        enrichmentLessonsCompletedPercentage\n        enrichmentLessonsExamCompletedPercentage\n        __typename\n      }\n      ... on LevelFourCourseProgressStats {\n        id\n        coreLessonsCompletedPercentage\n        coreLessonsExamCompletedPercentage\n        enrichmentLessonsCompletedPercentage\n        enrichmentLessonsExamCompletedPercentage\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 7:-ClickOnContinue" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CreateUserActivityLog&quot;,&quot;variables&quot;:{&quot;targetUrl&quot;:&quot;/l/courses/42ca9c07-6635-4af7-a2bb-69538a20a25c/lessons/f439da54-4065-4ccf-b897-d66b4f89ba08/progress/ab64057a-2807-4ce0-ad83-8ff20acf5445&quot;},&quot;query&quot;:&quot;mutation CreateUserActivityLog($targetUrl: String!) {\n  createUserActivityLog(input: {targetUrl: $targetUrl}) {\n    errorMessages\n    success\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;f439da54-4065-4ccf-b897-d66b4f89ba08&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;ab64057a-2807-4ce0-ad83-8ff20acf5445&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;61686e41-45a1-4275-842c-342b1fff0408&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 8:-SubmitTheTrainingGoalActivity" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createUserCourseGoals&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibGoalIds&quot;:[&quot;661ad749-39b2-4695-883a-5fb85dbfa782&quot;,&quot;6340bef9-00e8-48f6-8aec-4493646892f1&quot;]},&quot;query&quot;:&quot;mutation createUserCourseGoals($vibCourseId: ID!, $vibGoalIds: [ID!]!) {\n  createUserCourseGoals(input: {vibCourseId: $vibCourseId, vibGoalIds: $vibGoalIds}) {\n    errorMessages\n    success\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_3}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 9:-CompleteThePreTrainingsurveyByUsingnext" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/learn" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">learn</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">43624.0</stringProp>
              <stringProp name="ConstantTimer.delay">21812</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 43624 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Corre_CsrfToken_4" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">CsrfToken_4</stringProp>
              <stringProp name="RegexExtractor.regex">meta name=&quot;csrf-token&quot; content=&quot;(.*?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default">Notfound</stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getCourseWithBasicDetails&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;},&quot;query&quot;:&quot;query getCourseWithBasicDetails($vibCourseId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    userActivityPoints\n    completedPercentage\n    isCourseEnabled\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;courseSentimentSurveyProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibSentimentSurveyProgressId&quot;:&quot;3e8a5159-9d5d-49ba-8fda-ef43c5e0ca55&quot;},&quot;query&quot;:&quot;query courseSentimentSurveyProgress($vibCourseId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  courseSentimentSurveyProgress(vibCourseId: $vibCourseId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId) {\n    id\n    surveyType\n    status\n    isUserAllowedToTakeSentimentSurvey\n    course {\n      id\n      title\n      status\n      __typename\n    }\n    sentimentSurvey {\n      id\n      title\n      surveyQuestions {\n        id\n        question\n        description\n        surveyAnswers {\n          id\n          choiceText\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    currentSurveyQuestion {\n      id\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 10:-AfterCompleteIntroductionSelectNextExam" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;069fe413-20b7-4223-8e0f-6f016011bc27&quot;,&quot;pageProgressId&quot;:&quot;d8f8bbdd-92f6-42c6-b5cd-c5b0759bc4c4&quot;,&quot;courseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;questionId&quot;:&quot;d78ef00e-2e7c-452b-bddf-a451db3783d7&quot;},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;b8541aca-292f-46c3-b603-4abcc319df7e&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;828e178d-6dfc-4e2c-9cca-31eb670707d0&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;56868b8b-6d30-4d76-a95a-1a5f41b3210d&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;c53717a2-a46c-4eb5-9ca2-d122b7291afc&quot;,&quot;pageProgressId&quot;:&quot;56868b8b-6d30-4d76-a95a-1a5f41b3210d&quot;,&quot;courseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;7096d15f-6aa7-44d2-9d26-73463fbc7b85&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;828e178d-6dfc-4e2c-9cca-31eb670707d0&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;c9f6c8dc-da04-4b5d-8f8b-35625d719bad&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;submitPageQuestionAnswer&quot;,&quot;variables&quot;:{&quot;answerIds&quot;:[&quot;d129b52d-bcaa-4c90-99c8-8daaf5a95d94&quot;],&quot;pageProgressId&quot;:&quot;c9f6c8dc-da04-4b5d-8f8b-35625d719bad&quot;,&quot;questionId&quot;:&quot;09280708-2a0c-4216-9294-89a7351f1d30&quot;},&quot;query&quot;:&quot;mutation submitPageQuestionAnswer($answerIds: [ID!]!, $pageProgressId: ID!, $questionId: ID!) {\n  submitPageQuestionAnswer(input: {answerIds: $answerIds, pageProgressId: $pageProgressId, questionId: $questionId}) {\n    errorMessages\n    success\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;1b012715-9c53-4656-899e-17267cc98ac5&quot;,&quot;pageProgressId&quot;:&quot;c9f6c8dc-da04-4b5d-8f8b-35625d719bad&quot;,&quot;courseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;questionId&quot;:&quot;09280708-2a0c-4216-9294-89a7351f1d30&quot;},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelThreeCollectionCourse&quot;,&quot;variables&quot;:{&quot;vibLevelThreeCollectionCourseId&quot;:&quot;0ea2924f-6edb-4c69-9145-5f2c5ad75aea&quot;,&quot;vibLevelThreeLevelTwoCollectionId&quot;:&quot;aa2d521d-3379-435b-814e-42526ae9c750&quot;},&quot;query&quot;:&quot;query vibLevelThreeCollectionCourse($vibLevelThreeCollectionCourseId: ID!, $vibLevelThreeLevelTwoCollectionId: ID!) {\n  vibLevelThreeCollectionCourse(vibLevelThreeCollectionCourseId: $vibLevelThreeCollectionCourseId) {\n    id\n    previousCompletedLevelTwoCollection(vibLevelThreeLevelTwoCollectionId: $vibLevelThreeLevelTwoCollectionId) {\n      id\n      title\n      outroText\n      activityPoints\n      __typename\n    }\n    levelThreeCourse {\n      id\n      title\n      courseId\n      canStartCourse\n      isCourseEnabled\n      hasSeniorLeaderMessage\n      coreLevelTwoCollectionCount\n      enrichmentLevelTwoCollectionCount\n      isAllCoreContentCompleted\n      hasEnrichmentStarted\n      image {\n        id\n        url\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        activityPoints\n        __typename\n      }\n      userCourseProgress {\n        id\n        status\n        __typename\n      }\n      jumpBackIn(vibLevelThreeCollectionCourseId: $vibLevelThreeCollectionCourseId, vibLevelThreeLevelTwoCollectionId: $vibLevelThreeLevelTwoCollectionId) {\n        courseId\n        courseTitle\n        levelTwoCollectionId\n        levelTwoCollectionTitle\n        levelTwoCollectionDescription\n        levelTwoCollectionDescriptionTitle\n        levelOneCollectionCount\n        levelTwoCollectionIntroText\n        completedLevelOneCollectionCount\n        jumpBackInTitle\n        jumpBackInDesc\n        jumpBackInPath\n        __typename\n      }\n      courseLevelThreeCollections {\n        id\n        contentType\n        isUserAllowToVisit(vibLevelThreeCollectionCourseId: $vibLevelThreeCollectionCourseId, vibLevelThreeLevelTwoCollectionId: $vibLevelThreeLevelTwoCollectionId)\n        levelThreeCollection {\n          id\n          levelThreeLevelTwoCollections {\n            id\n            position\n            levelTwoCollection {\n              id\n              title\n              description\n              introText\n              outroText\n              activityPoints\n              levelOneCollectionsCount\n              firstLevelTwoLevelOneCollection {\n                id\n                __typename\n              }\n              levelOneCollections {\n                id\n                title\n                description\n                __typename\n              }\n              exam {\n                id\n                title\n                __typename\n              }\n              image {\n                id\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        levelThreeCollectionProgress {\n          id\n          status\n          levelTwoCollectionProgresses {\n            id\n            status\n            levelTwoCollectionId\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;c257c994-2f16-47a2-93bc-dcbc4f80f6c9&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;70a4fef9-14c7-4581-aa59-f1c7105bffc7&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;bc4eeced-2c3c-46bd-8008-211576f3f350&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 11:-CompleteThePreAssessmentExamSelectCorretAnswer" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 10.A - Question 1 - I am willing to select a challenging work assignment that I can learn a lot from." enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3e8a5159-9d5d-49ba-8fda-ef43c5e0ca55&quot;,&quot;vibSurveyQuestionId&quot;:&quot;237226fa-95c0-4272-a0d7-417dee5d44b2&quot;,&quot;vibSurveyAnswerId&quot;:&quot;eab39116-bf10-45f3-9044-8e4c55d78d72&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 10.B - Question 2 - I often look for opportunities to develop new skills and knowledge." enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3e8a5159-9d5d-49ba-8fda-ef43c5e0ca55&quot;,&quot;vibSurveyQuestionId&quot;:&quot;cc4aea7a-532c-40f7-8420-339833cb4fcd&quot;,&quot;vibSurveyAnswerId&quot;:&quot;fb35448d-0841-4a3e-a0dd-45f975500e34&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 10.C - Question 3 - I enjoy challenging and difficult tasks at work where I will learn new skills." enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3e8a5159-9d5d-49ba-8fda-ef43c5e0ca55&quot;,&quot;vibSurveyQuestionId&quot;:&quot;d9e76af9-3cde-4ec0-ba08-bb8f1553acec&quot;,&quot;vibSurveyAnswerId&quot;:&quot;b4dc7c34-0df5-4668-91b4-b68dd00d74b6&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 10.D - Question 4 - For me, development of my work ability is important enough to take risks." enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3e8a5159-9d5d-49ba-8fda-ef43c5e0ca55&quot;,&quot;vibSurveyQuestionId&quot;:&quot;0e207931-5728-450d-987f-b0ed8c10f916&quot;,&quot;vibSurveyAnswerId&quot;:&quot;eab39116-bf10-45f3-9044-8e4c55d78d72&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 10.E - Question 5 - My level of sales performance goal achievement is among the best in the company." enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3e8a5159-9d5d-49ba-8fda-ef43c5e0ca55&quot;,&quot;vibSurveyQuestionId&quot;:&quot;5a01f00f-94af-45f0-b7d2-a82b46421b1c&quot;,&quot;vibSurveyAnswerId&quot;:&quot;b4dc7c34-0df5-4668-91b4-b68dd00d74b6&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 10.F - Question 6 - My sales manager would rate my performance as among the best in the company." enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3e8a5159-9d5d-49ba-8fda-ef43c5e0ca55&quot;,&quot;vibSurveyQuestionId&quot;:&quot;0c9933bb-5968-4f0b-8bf2-43f8d43bafcd&quot;,&quot;vibSurveyAnswerId&quot;:&quot;ac9463d9-a882-48a4-a173-aa994790f4c2&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 10.G - Question 7 - My overall sales performance is among the best in the company." enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3e8a5159-9d5d-49ba-8fda-ef43c5e0ca55&quot;,&quot;vibSurveyQuestionId&quot;:&quot;b7893ede-631b-4a5c-bf98-35cc8b9d964b&quot;,&quot;vibSurveyAnswerId&quot;:&quot;eab39116-bf10-45f3-9044-8e4c55d78d72&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 10.H - Question 8 - Approximately how many years of work experience, in total, do you have?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3e8a5159-9d5d-49ba-8fda-ef43c5e0ca55&quot;,&quot;vibSurveyQuestionId&quot;:&quot;4995c2e8-afac-416b-9ae5-7d6a802325b4&quot;,&quot;vibSurveyAnswerId&quot;:&quot;a1cfe602-88ba-4094-b555-baf6cd1a038c&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 10.I - Question 9 - Approximately how many years of sales experience do you have?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3e8a5159-9d5d-49ba-8fda-ef43c5e0ca55&quot;,&quot;vibSurveyQuestionId&quot;:&quot;1af2c116-33c0-4239-8d08-547c8f120e6a&quot;,&quot;vibSurveyAnswerId&quot;:&quot;a8f4e5f2-b592-476f-ae2b-5fde5606c268&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Step 10.J - Question 10 - Approximately how many years have you worked for your current employer?" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3e8a5159-9d5d-49ba-8fda-ef43c5e0ca55&quot;,&quot;vibSurveyQuestionId&quot;:&quot;6c708cb2-2056-460e-983c-c0d01e3a1961&quot;,&quot;vibSurveyAnswerId&quot;:&quot;a1cfe602-88ba-4094-b555-baf6cd1a038c&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 12:-CompleteTheBaselineCheckActivity" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;9c3ed09b-e103-4fa4-84e2-df9687ad8569&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;d1031842-8b36-428b-b533-a0ccf9c8e33d&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c0f1f2a4-8832-4684-ad1e-9bbdf84f0fa1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;b3354fb1-5d4b-47f7-8f7c-8aaed6194b79&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;9c5bffea-bd03-40ed-b524-acac68d83058&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;fa266b58-0ad4-4e8a-bf71-0b715c6d03d1&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;fa266b58-0ad4-4e8a-bf71-0b715c6d03d1&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;c1ca1f02-9541-433b-a5f3-0997a65cf866&quot;,&quot;vibExamQuestionId&quot;:&quot;b94b52ff-0336-45bb-9518-f818944da4fb&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;0bbe3327-0610-4675-936d-d6d1998976a4&quot;,&quot;vibExamQuestionId&quot;:&quot;dc5898ca-b7b0-4c2e-9749-2490d2fcf3a7&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;78911849-173c-4eb5-98dd-98d5b87a3b30&quot;,&quot;vibExamQuestionId&quot;:&quot;dad4a1f6-4767-4964-acbf-0d65284a85a8&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;21386eca-4b11-4fae-9b95-813ae75fd6f8&quot;,&quot;vibExamQuestionId&quot;:&quot;4aa15a25-d346-4920-9f55-f0d8b226c94b&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;45ebf6f2-c9bc-42fc-8132-022c0e05f1ac&quot;,&quot;vibExamQuestionId&quot;:&quot;02fc41cc-0f60-49d0-8397-e50d790ac1f1&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;42a2d5c8-93d3-48bc-a7b1-7c88ebb7c384&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;762f442f-60f3-483c-8283-7fc04008fd36&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;80cb2750-9eee-4644-8667-7c2442eeedc1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;9c3ed09b-e103-4fa4-84e2-df9687ad8569&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;d1031842-8b36-428b-b533-a0ccf9c8e33d&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c0f1f2a4-8832-4684-ad1e-9bbdf84f0fa1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;b3354fb1-5d4b-47f7-8f7c-8aaed6194b79&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;9c5bffea-bd03-40ed-b524-acac68d83058&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;fa266b58-0ad4-4e8a-bf71-0b715c6d03d1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;courseAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query courseAssessmentAttempt($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    overallScore\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            __typename\n          }\n          __typename\n        }\n        userAssessmentResult(vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n          id\n          assessmentExamTitle\n          percentage\n          percentageDiffToBenchmark\n          noOfQuestions\n          performanceCategory\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/learn" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">learn</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">246204.0</stringProp>
              <stringProp name="ConstantTimer.delay">123102</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 246204 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getCourseWithBasicDetails&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;},&quot;query&quot;:&quot;query getCourseWithBasicDetails($vibCourseId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    userActivityPoints\n    completedPercentage\n    isCourseEnabled\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelThreeCollectionCourse&quot;,&quot;variables&quot;:{&quot;vibLevelThreeCollectionCourseId&quot;:&quot;2fca2133-e6ba-4c0c-82eb-01a23eb582c1&quot;,&quot;vibLevelThreeLevelTwoCollectionId&quot;:&quot;fd835908-4c80-4858-b0f8-02ae8a910467&quot;},&quot;query&quot;:&quot;query vibLevelThreeCollectionCourse($vibLevelThreeCollectionCourseId: ID!, $vibLevelThreeLevelTwoCollectionId: ID!) {\n  vibLevelThreeCollectionCourse(vibLevelThreeCollectionCourseId: $vibLevelThreeCollectionCourseId) {\n    id\n    previousCompletedLevelTwoCollection(vibLevelThreeLevelTwoCollectionId: $vibLevelThreeLevelTwoCollectionId) {\n      id\n      title\n      outroText\n      activityPoints\n      __typename\n    }\n    levelThreeCourse {\n      id\n      title\n      courseId\n      canStartCourse\n      isCourseEnabled\n      hasSeniorLeaderMessage\n      coreLevelTwoCollectionCount\n      enrichmentLevelTwoCollectionCount\n      isAllCoreContentCompleted\n      hasEnrichmentStarted\n      image {\n        id\n        url\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        activityPoints\n        __typename\n      }\n      userCourseProgress {\n        id\n        status\n        __typename\n      }\n      jumpBackIn(vibLevelThreeCollectionCourseId: $vibLevelThreeCollectionCourseId, vibLevelThreeLevelTwoCollectionId: $vibLevelThreeLevelTwoCollectionId) {\n        courseId\n        courseTitle\n        levelTwoCollectionId\n        levelTwoCollectionTitle\n        levelTwoCollectionDescription\n        levelTwoCollectionDescriptionTitle\n        levelOneCollectionCount\n        levelTwoCollectionIntroText\n        completedLevelOneCollectionCount\n        jumpBackInTitle\n        jumpBackInDesc\n        jumpBackInPath\n        __typename\n      }\n      courseLevelThreeCollections {\n        id\n        contentType\n        isUserAllowToVisit(vibLevelThreeCollectionCourseId: $vibLevelThreeCollectionCourseId, vibLevelThreeLevelTwoCollectionId: $vibLevelThreeLevelTwoCollectionId)\n        levelThreeCollection {\n          id\n          levelThreeLevelTwoCollections {\n            id\n            position\n            levelTwoCollection {\n              id\n              title\n              description\n              introText\n              outroText\n              activityPoints\n              levelOneCollectionsCount\n              firstLevelTwoLevelOneCollection {\n                id\n                __typename\n              }\n              levelOneCollections {\n                id\n                title\n                description\n                __typename\n              }\n              exam {\n                id\n                title\n                __typename\n              }\n              image {\n                id\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        levelThreeCollectionProgress {\n          id\n          status\n          levelTwoCollectionProgresses {\n            id\n            status\n            levelTwoCollectionId\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 12 A - Research websites, social media, public press, and financial statements, and any prior contact with my company or network to uncover their likely interests and needs." enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;464ada0a-0249-444c-b902-c6b3b8fe3ec9&quot;,&quot;vibExamQuestionId&quot;:&quot;de5458fd-bfc4-4415-ae25-93058da0a5d7&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;bafb7703-8716-48f4-b4ef-8e72112dc6c9&quot;,&quot;vibExamQuestionId&quot;:&quot;d8a6d73e-53d4-4cb9-9a60-4b128e4cf623&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;e1e4a205-f47f-4d22-a76f-3e7de65ac6a4&quot;,&quot;vibExamQuestionId&quot;:&quot;a34bda28-b8f7-47b5-a3fc-20e7e4445ac9&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;42a2d5c8-93d3-48bc-a7b1-7c88ebb7c384&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 12 B -  Research my competitors and, in particular, any competitor that the customer is using as a way to identify potential gaps and opportunities to create value through my capabilities." enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;42a2d5c8-93d3-48bc-a7b1-7c88ebb7c384&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;cdd3c876-be3b-49cc-b267-c4e34bb557d8&quot;,&quot;vibExamQuestionId&quot;:&quot;c8946f42-9c0f-41f0-8b4e-739e03e79bbd&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;8f5dc8d7-6ca3-46ef-bdb9-0b0a2a4f4fc3&quot;,&quot;vibExamQuestionId&quot;:&quot;4b866a2e-d17a-40d7-b4e7-d2b0b79eb0d3&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;53d88d0a-7009-42d8-9347-6d6c03c9a4e9&quot;,&quot;vibExamQuestionId&quot;:&quot;ec2bd058-014a-4d58-8aa3-27b52d1679e6&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;b437a8e4-a8ee-49fa-9bba-ebb5d6a0de3c&quot;,&quot;vibExamQuestionId&quot;:&quot;96330f4f-23ca-4f1c-ae60-fb894225695b&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;42a2d5c8-93d3-48bc-a7b1-7c88ebb7c384&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;762f442f-60f3-483c-8283-7fc04008fd36&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 12 C  - Select Begin a dialogue and click on continue" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;762f442f-60f3-483c-8283-7fc04008fd36&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;448ccc2a-424f-4cfc-b4c0-9ba4ff6b0b0b&quot;,&quot;vibExamQuestionId&quot;:&quot;348a2091-8611-4e05-ba12-f4cfc2504282&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;5395fb91-25ae-4d8b-aece-aab28c98bdad&quot;,&quot;vibExamQuestionId&quot;:&quot;642be21d-cb9d-406b-9608-85a87deb23ab&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;1f287163-5691-4a92-ae9b-2660efe1b17c&quot;,&quot;vibExamQuestionId&quot;:&quot;8827ffee-884d-46a5-b55f-647df92df154&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;02188079-944e-4e4b-ab83-603f49c2bbe5&quot;,&quot;vibExamQuestionId&quot;:&quot;2c6a7b8e-dded-4dd1-9130-520101d93770&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;42a2d5c8-93d3-48bc-a7b1-7c88ebb7c384&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;762f442f-60f3-483c-8283-7fc04008fd36&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;80cb2750-9eee-4644-8667-7c2442eeedc1&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 12 D - Ask specific questions to make sure that the customer understands the benefits of our recommendations" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;80cb2750-9eee-4644-8667-7c2442eeedc1&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;2b99a377-8d89-4f70-8f04-bf9be902b185&quot;,&quot;vibExamQuestionId&quot;:&quot;62d57be2-d7e8-4348-928b-406a8efb2cb2&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;3a9e7cce-c5bc-414f-8ef2-fc32004728e7&quot;,&quot;vibExamQuestionId&quot;:&quot;0fb911ba-f0c3-46b8-82af-553847e05f6a&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;9cc067df-dd5d-4683-ad39-942e885caec1&quot;,&quot;vibExamQuestionId&quot;:&quot;7fe623f2-6e26-4f4c-85f2-2a66fb04a72c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;42a2d5c8-93d3-48bc-a7b1-7c88ebb7c384&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;762f442f-60f3-483c-8283-7fc04008fd36&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;80cb2750-9eee-4644-8667-7c2442eeedc1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;9c3ed09b-e103-4fa4-84e2-df9687ad8569&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 12 E  - Assume that the decision-making process will end up being more complicated than initially expected, and plan accordingly.." enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;9c3ed09b-e103-4fa4-84e2-df9687ad8569&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;42a2d5c8-93d3-48bc-a7b1-7c88ebb7c384&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;762f442f-60f3-483c-8283-7fc04008fd36&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;80cb2750-9eee-4644-8667-7c2442eeedc1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;9c3ed09b-e103-4fa4-84e2-df9687ad8569&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;9c3ed09b-e103-4fa4-84e2-df9687ad8569&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 12 F - Identify a benefit to my current contact, as well as to a contact at the senior/strategic level, to persuade my contact to support me in gaining access.." enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;1e0bfc8f-0c42-4ef5-a0be-96493d068f83&quot;,&quot;vibExamQuestionId&quot;:&quot;8fe83a2a-260a-4085-a543-07af9e2812c1&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;0cc18c2f-40c2-4b57-ab4e-3391efbb76ec&quot;,&quot;vibExamQuestionId&quot;:&quot;445ffe4e-0841-4f3f-ae9c-bee384266769&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;bc4401ce-da42-4a89-9a6d-4ec98bf9cb44&quot;,&quot;vibExamQuestionId&quot;:&quot;18f4c920-70ed-4893-ab70-1f3c67060bfe&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;bc479f2a-c3ce-4e1d-98f4-6e679811b99c&quot;,&quot;vibExamQuestionId&quot;:&quot;1defe814-3e3f-4e07-b084-6d66a8a46c2c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;1a07fc78-0176-4329-85ff-c2f151daaebe&quot;,&quot;vibExamQuestionId&quot;:&quot;49c1e11f-6dd4-465f-96ea-ba10f8384d3b&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;42a2d5c8-93d3-48bc-a7b1-7c88ebb7c384&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;762f442f-60f3-483c-8283-7fc04008fd36&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;80cb2750-9eee-4644-8667-7c2442eeedc1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;9c3ed09b-e103-4fa4-84e2-df9687ad8569&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;d1031842-8b36-428b-b533-a0ccf9c8e33d&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 12 G - Select Start a dialogue...and click on continue" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;d1031842-8b36-428b-b533-a0ccf9c8e33d&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;0c09d04e-d400-43e1-98a6-8b75cef1f60c&quot;,&quot;vibExamQuestionId&quot;:&quot;8b276c04-4eb8-4ff1-b32d-0cd97cdfcc11&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;e5c47cec-97c4-4b0e-9c16-ae84126832b9&quot;,&quot;vibExamQuestionId&quot;:&quot;f09c70c1-ee7d-46df-8000-f3aa3889329f&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;aaf0f75f-367b-416b-af56-8b19fd90cf14&quot;,&quot;vibExamQuestionId&quot;:&quot;1fbb6737-0d87-44ec-bde4-cd11aa7fd023&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;42a2d5c8-93d3-48bc-a7b1-7c88ebb7c384&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;762f442f-60f3-483c-8283-7fc04008fd36&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;80cb2750-9eee-4644-8667-7c2442eeedc1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;9c3ed09b-e103-4fa4-84e2-df9687ad8569&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;d1031842-8b36-428b-b533-a0ccf9c8e33d&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;c0f1f2a4-8832-4684-ad1e-9bbdf84f0fa1&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;c0f1f2a4-8832-4684-ad1e-9bbdf84f0fa1&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;14b7d7b3-d971-4692-8938-d223431f8e92&quot;,&quot;vibExamQuestionId&quot;:&quot;4bfce5de-c9d3-43e2-8b5b-ce8987f47f70&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;b639df1b-4333-4460-bf81-ae380f1b5c44&quot;,&quot;vibExamQuestionId&quot;:&quot;22e8c945-d993-4efc-9668-4c507540d4b6&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;30bb66b5-0254-476a-83b6-01385d0aa799&quot;,&quot;vibExamQuestionId&quot;:&quot;a93d19a3-13e9-4ef6-986e-2ca3464fe6ed&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;81fe499c-630d-4a2c-b234-cb2367b1b2b9&quot;,&quot;vibExamQuestionId&quot;:&quot;1e862bd8-28d1-4330-a368-0b880e927137&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 12 H - Tell the customer that I understand the feelings and provide information to change the impression" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;42a2d5c8-93d3-48bc-a7b1-7c88ebb7c384&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;762f442f-60f3-483c-8283-7fc04008fd36&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;80cb2750-9eee-4644-8667-7c2442eeedc1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;9c3ed09b-e103-4fa4-84e2-df9687ad8569&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;d1031842-8b36-428b-b533-a0ccf9c8e33d&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c0f1f2a4-8832-4684-ad1e-9bbdf84f0fa1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;b3354fb1-5d4b-47f7-8f7c-8aaed6194b79&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;b3354fb1-5d4b-47f7-8f7c-8aaed6194b79&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;93a25a72-82da-455f-a635-4ad41a392b00&quot;,&quot;vibExamQuestionId&quot;:&quot;94d9a8d9-b9e1-4f20-a568-d4c8705986a6&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;b0af0c18-dd67-4e2c-8d8e-2d28c7dcee1b&quot;,&quot;vibExamQuestionId&quot;:&quot;2bb17d92-06e0-4215-8f51-1829577f37c9&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;727d409e-cd7a-4926-ad79-e1f3b53569a8&quot;,&quot;vibExamQuestionId&quot;:&quot;2f5007b7-86b2-4e61-9337-04a479e7c0ab&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;91548ad7-00d9-4d36-a605-2244dfb7cfb5&quot;,&quot;vibExamQuestionId&quot;:&quot;91788a2c-b621-440d-9ef0-aabe13c18996&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;18680e1b-2a4f-437d-8d4d-a7164220f5a2&quot;,&quot;vibExamQuestionId&quot;:&quot;7ce1b4ea-fd92-4497-8671-a0fb6e3428b3&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;42a2d5c8-93d3-48bc-a7b1-7c88ebb7c384&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;762f442f-60f3-483c-8283-7fc04008fd36&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;80cb2750-9eee-4644-8667-7c2442eeedc1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;9c3ed09b-e103-4fa4-84e2-df9687ad8569&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;d1031842-8b36-428b-b533-a0ccf9c8e33d&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c0f1f2a4-8832-4684-ad1e-9bbdf84f0fa1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;b3354fb1-5d4b-47f7-8f7c-8aaed6194b79&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;9c5bffea-bd03-40ed-b524-acac68d83058&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibExamId&quot;:&quot;9c5bffea-bd03-40ed-b524-acac68d83058&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;18680e1b-2a4f-437d-8d4d-a7164220f5a2&quot;,&quot;vibExamQuestionId&quot;:&quot;98227ff1-19b5-41b5-961a-d77d81f8a503&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;9cb819f5-165e-4eba-a740-58479114caf8&quot;,&quot;vibExamQuestionId&quot;:&quot;7dcaa03a-b33b-4707-9d8f-af870f332044&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;3cc47ee0-08c2-46bb-85fe-2eb8ea78e3b8&quot;,&quot;vibExamQuestionId&quot;:&quot;0647bf91-09ad-4de0-b8a8-197ea6454494&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAnswerId&quot;:&quot;9f659ca8-8120-4fc5-bd9e-0e0938ab75e4&quot;,&quot;vibExamQuestionId&quot;:&quot;41ffc217-0873-400b-b7ba-888bffaad64f&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;46e5b625-107b-47e3-86f3-d010dacd4df7&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;42a2d5c8-93d3-48bc-a7b1-7c88ebb7c384&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;762f442f-60f3-483c-8283-7fc04008fd36&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;80cb2750-9eee-4644-8667-7c2442eeedc1&quot;,&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;13523ed6-c49c-4b3f-b042-4823b70697e6&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 13:-SelectTheConsucutiveApproachClickNext" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;703f0653-d16d-42f9-9507-0d9abbcc4ddb&quot;,&quot;pageProgressId&quot;:&quot;19385c40-3d5d-4c1d-8c02-9721e56c914f&quot;,&quot;courseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;76c84e78-5711-4969-8bec-e872d72ee0b6&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;828e178d-6dfc-4e2c-9cca-31eb670707d0&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;d1b8c60c-efb2-43f7-9c7b-55be653dfb45&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 14:-ContinueTheNextTopicInLearningPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartCourse&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;},&quot;query&quot;:&quot;mutation StartCourse($vibCourseId: ID!) {\n  startCourse(input: {vibCourseId: $vibCourseId}) {\n    success\n    errorMessages\n    jumpBackIn {\n      jumpBackInPath\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;045c1701-aa1b-410a-b8d4-8fdf2f7b4554&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;828e178d-6dfc-4e2c-9cca-31eb670707d0&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;19385c40-3d5d-4c1d-8c02-9721e56c914f&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 15:-FinishTheExamClickOnSubmit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;738f8478-832d-45ef-969b-adc9938090a6&quot;,&quot;pageProgressId&quot;:&quot;bc4eeced-2c3c-46bd-8008-211576f3f350&quot;,&quot;courseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;4a9ccc4c-cd94-47f6-a86d-1819d7063638&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;738f8478-832d-45ef-969b-adc9938090a6&quot;,&quot;pageProgressId&quot;:&quot;4a9ccc4c-cd94-47f6-a86d-1819d7063638&quot;,&quot;courseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;56c258d6-1f58-425a-a12d-defec888177b&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 15 A - The Buying Journey gives us insight into how the customer’s focus, thinking, and evolve as the customer advances in their journey" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;738f8478-832d-45ef-969b-adc9938090a6&quot;,&quot;pageProgressId&quot;:&quot;56c258d6-1f58-425a-a12d-defec888177b&quot;,&quot;courseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;9f79e42f-45d0-43ab-a066-48228216ca3c&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;738f8478-832d-45ef-969b-adc9938090a6&quot;,&quot;pageProgressId&quot;:&quot;9f79e42f-45d0-43ab-a066-48228216ca3c&quot;,&quot;courseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;88d7b963-6e0d-4ac3-b4ed-278f6e1df468&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;70a4fef9-14c7-4581-aa59-f1c7105bffc7&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 15 B  - Select The Emocational State" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;ff39b824-aac1-4877-b7d5-18544fe66037&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;submitPageQuestionAnswer&quot;,&quot;variables&quot;:{&quot;answerIds&quot;:[&quot;8118ec79-d615-4742-96a3-9353c89a3df2&quot;],&quot;pageProgressId&quot;:&quot;ff39b824-aac1-4877-b7d5-18544fe66037&quot;,&quot;questionId&quot;:&quot;47385a05-19e8-49b7-a192-01b21c3a949c&quot;},&quot;query&quot;:&quot;mutation submitPageQuestionAnswer($answerIds: [ID!]!, $pageProgressId: ID!, $questionId: ID!) {\n  submitPageQuestionAnswer(input: {answerIds: $answerIds, pageProgressId: $pageProgressId, questionId: $questionId}) {\n    errorMessages\n    success\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 16:-ClickOnSubmit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;b5bc3ade-cfbe-49ad-86a0-b3a7456612aa&quot;,&quot;pageProgressId&quot;:&quot;d1b8c60c-efb2-43f7-9c7b-55be653dfb45&quot;,&quot;courseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;a57bbd30-5e7a-4e62-a26d-65dce6698c84&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;b5bc3ade-cfbe-49ad-86a0-b3a7456612aa&quot;,&quot;pageProgressId&quot;:&quot;a57bbd30-5e7a-4e62-a26d-65dce6698c84&quot;,&quot;courseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;0b4f404f-139b-4f47-a61e-0571f12eb530&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;b5bc3ade-cfbe-49ad-86a0-b3a7456612aa&quot;,&quot;pageProgressId&quot;:&quot;0b4f404f-139b-4f47-a61e-0571f12eb530&quot;,&quot;courseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;2af52042-82cd-450f-9028-de2e593d57d1&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;828e178d-6dfc-4e2c-9cca-31eb670707d0&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;d8f8bbdd-92f6-42c6-b5cd-c5b0759bc4c4&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;37576b00-4195-44ce-99ff-4162cfb69d28&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    levelOneCollections {\n                      id\n                      title\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                levelOneCollections {\n                  id\n                  title\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;submitPageQuestionAnswer&quot;,&quot;variables&quot;:{&quot;answerIds&quot;:[&quot;61f3d8fd-8cd2-447d-b66f-20211b98d06d&quot;],&quot;pageProgressId&quot;:&quot;d8f8bbdd-92f6-42c6-b5cd-c5b0759bc4c4&quot;,&quot;questionId&quot;:&quot;d78ef00e-2e7c-452b-bddf-a451db3783d7&quot;},&quot;query&quot;:&quot;mutation submitPageQuestionAnswer($answerIds: [ID!]!, $pageProgressId: ID!, $questionId: ID!) {\n  submitPageQuestionAnswer(input: {answerIds: $answerIds, pageProgressId: $pageProgressId, questionId: $questionId}) {\n    errorMessages\n    success\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">${CsrfToken_4}</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 17:-ClickOnReturnAfterCompletingExam" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/users/impersonate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_method</stringProp>
                  <stringProp name="Argument.value">delete</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                  <stringProp name="Argument.value">yB4IRLhgBkkUouiuLaLy3deHvuWVric3ihbTyI6cfbRgazDm4SZUBXX6sbB6DqVnReH4NJMHthFFr3MsZi70nA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">admin/users/impersonate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">188407.0</stringProp>
              <stringProp name="ConstantTimer.delay">94203.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 188407 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 18:-Delete User" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users/7a539c71-a5e5-474e-a863-8e624ce58319" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_method</stringProp>
                  <stringProp name="Argument.value">delete</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                  <stringProp name="Argument.value">MC7NMAPgzfY6olOrhvT1PqGLPnc_Nk9PextNnYElsqrgwv-RmBhPPEUvgi5mZ-UDmv2geiZkUwALqJjk4osy6w</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users/7a539c71-a5e5-474e-a863-8e624ce58319</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/filters.json?with_managers=true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="with_managers" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">with_managers</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/7a539c71-a5e5-474e-a863-8e624ce58319/filters.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/admin/available_languages.json" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/admin/available_languages.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Step 19:-LogoutAdminUser" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">true</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin_users/sign_out" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_method</stringProp>
                  <stringProp name="Argument.value">delete</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                  <stringProp name="Argument.value">_GefvpnLaetVi6UOjfuRRp0UgbCpI0c2HoamRPFdOz22yFnMwQ0UQ4AfG3XiptwJhF6FhYHReKu3Fri3RoMh2A</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">admin_users/sign_out</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <stringProp name="RandomTimer.range">59982.0</stringProp>
              <stringProp name="ConstantTimer.delay">29991</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 59982 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <DebugSampler guiclass="TestBeanGUI" testclass="DebugSampler" testname="Debug Sampler" enabled="true">
          <boolProp name="displayJMeterProperties">false</boolProp>
          <boolProp name="displayJMeterVariables">true</boolProp>
          <boolProp name="displaySystemProperties">false</boolProp>
        </DebugSampler>
        <hashTree/>
        <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
          <boolProp name="ResultCollector.error_logging">false</boolProp>
          <objProp>
            <name>saveConfig</name>
            <value class="SampleSaveConfiguration">
              <time>true</time>
              <latency>true</latency>
              <timestamp>true</timestamp>
              <success>true</success>
              <label>true</label>
              <code>true</code>
              <message>true</message>
              <threadName>true</threadName>
              <dataType>true</dataType>
              <encoding>false</encoding>
              <assertions>true</assertions>
              <subresults>true</subresults>
              <responseData>false</responseData>
              <samplerData>false</samplerData>
              <xml>false</xml>
              <fieldNames>true</fieldNames>
              <responseHeaders>false</responseHeaders>
              <requestHeaders>false</requestHeaders>
              <responseDataOnError>false</responseDataOnError>
              <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
              <assertionsResultsToSave>0</assertionsResultsToSave>
              <bytes>true</bytes>
              <sentBytes>true</sentBytes>
              <url>true</url>
              <threadCounts>true</threadCounts>
              <idleTime>true</idleTime>
              <connectTime>true</connectTime>
            </value>
          </objProp>
          <stringProp name="filename"></stringProp>
        </ResultCollector>
        <hashTree/>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
