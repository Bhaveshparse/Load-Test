<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="4.0">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="spi45" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.0.20. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="sec-ch-ua" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua</stringProp>
            <stringProp name="Header.value">&quot; Not A;Brand&quot;;v=&quot;99&quot;, &quot;Chromium&quot;;v=&quot;96&quot;, &quot;Google Chrome&quot;;v=&quot;96&quot;</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-mobile" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
            <stringProp name="Header.value">?0</stringProp>
          </elementProp>
          <elementProp name="sec-ch-ua-platform" elementType="Header">
            <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
            <stringProp name="Header.value">&quot;Windows&quot;</stringProp>
          </elementProp>
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/96.0.4664.110 Safari/537.36</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">acme-vib-exp.platform.spisales.com</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="Launch_URL" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin_users/sign_in" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">admin_users/sign_in</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>0.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="Sign_In" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin_users/sign_in" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="admin_user[password]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">admin_user[password]</stringProp>
                  <stringProp name="Argument.value">Testpass1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="commit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">commit</stringProp>
                  <stringProp name="Argument.value">Login</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="admin_user[email]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">admin_user[email]</stringProp>
                  <stringProp name="Argument.value">admin@spisales.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="admin_user[remember_me]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">admin_user[remember_me]</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                  <stringProp name="Argument.value">tHe3sLwStUgex6QW330HE6J6z6-mg__xvliqCGbf21wVPsfkay_T4upHTS0PYaReTvEmiRJSulnnucD-eHgdqw</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">admin_users/sign_in</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>46045.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">23022.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 46045 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="OpenAcmeInTable" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>21243.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">10621.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 21243 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="CleckOnNewCreateUser" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>14566.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">7283</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 14566 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/filters.json?with_managers=true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="with_managers" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">with_managers</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v2/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/filters.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/admin/available_languages.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v2/admin/available_languages.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users/new" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users/new</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>3653.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">1826.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 3653 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="user[launch_email_method]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[launch_email_method]</stringProp>
                  <stringProp name="Argument.value">confirm_without_sending_launch_email</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[last_name]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[last_name]</stringProp>
                  <stringProp name="Argument.value">Test70</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[language_preference]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[language_preference]</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[status]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[status]</stringProp>
                  <stringProp name="Argument.value">active</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                  <stringProp name="Argument.value">7zcsCQ29JoolnCrUId4rXopjNhJqK_bP2-UrUbJi9wcYOMvvgiEEJ440B0le8-yTmlvgxiVKZ254tfffgb6xig</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[password_confirmation]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[password_confirmation]</stringProp>
                  <stringProp name="Argument.value">Automation@780</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="launch_email_method_select" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">launch_email_method_select</stringProp>
                  <stringProp name="Argument.value">confirm_without_sending_launch_email</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="hidden_account_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">hidden_account_id</stringProp>
                  <stringProp name="Argument.value">d5d652f7-90b7-4b5b-a44a-ca28830beb61</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[launch_email_schedule_later_at]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[launch_email_schedule_later_at]</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[email]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[email]</stringProp>
                  <stringProp name="Argument.value">Automation780@gmail.com</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[first_name]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[first_name]</stringProp>
                  <stringProp name="Argument.value">Automation780</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[role]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[role]</stringProp>
                  <stringProp name="Argument.value">participant</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[manager_user_id]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[manager_user_id]</stringProp>
                  <stringProp name="Argument.value">a8ac9309-69eb-458b-8c14-06a781e243e0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="user[password]" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">user[password]</stringProp>
                  <stringProp name="Argument.value">Automation@780</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>63085.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">31542.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 63085 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/filters.json?with_managers=true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="with_managers" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">with_managers</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v2/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/filters.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/admin/available_languages.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v2/admin/available_languages.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="AfterCreatedUserSelectTheCourceForUser" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/vib/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/courses" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">vib/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/courses</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>34362.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">17181</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 34362 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/vib/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/courses/42ca9c07-6635-4af7-a2bb-69538a20a25c" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">vib/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/courses/42ca9c07-6635-4af7-a2bb-69538a20a25c</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>5836.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">2918</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 5836 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/vib/v1/admin/assign_users.json?object_id=42ca9c07-6635-4af7-a2bb-69538a20a25c&amp;object_type=Course&amp;list_type=existing&amp;page=1&amp;sort=name&amp;direction=asc&amp;search_text=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="list_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">list_type</stringProp>
                  <stringProp name="Argument.value">existing</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="object_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">object_type</stringProp>
                  <stringProp name="Argument.value">Course</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sort" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sort</stringProp>
                  <stringProp name="Argument.value">name</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="object_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">object_id</stringProp>
                  <stringProp name="Argument.value">42ca9c07-6635-4af7-a2bb-69538a20a25c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="direction" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">direction</stringProp>
                  <stringProp name="Argument.value">asc</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="search_text" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_text</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/vib/v1/admin/assign_users.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/accounts/undefined/filters.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v2/accounts/undefined/filters.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/vib/v1/admin/assign_users.json?object_id=42ca9c07-6635-4af7-a2bb-69538a20a25c&amp;object_type=Course&amp;list_type=remaining&amp;page=1&amp;filters=%7B%22territories%22:[],%22is_a_manager%22:%22%22,%22organizationalGroups%22:[],%22userGroups%22:[]%7D&amp;search_text=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="list_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">list_type</stringProp>
                  <stringProp name="Argument.value">remaining</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="object_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">object_type</stringProp>
                  <stringProp name="Argument.value">Course</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">filters</stringProp>
                  <stringProp name="Argument.value">{&quot;territories&quot;:[],&quot;is_a_manager&quot;:&quot;&quot;,&quot;organizationalGroups&quot;:[],&quot;userGroups&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="object_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">object_id</stringProp>
                  <stringProp name="Argument.value">42ca9c07-6635-4af7-a2bb-69538a20a25c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="search_text" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_text</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/vib/v1/admin/assign_users.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/vib/v1/admin/assign_users.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;authenticity_token&quot;:&quot;ym-ulxJ45aH0IG-a1M3M1A6TC5kA02QpbiB1Ws8B_3s9YElxneTHDF-IQger4AsZHqvdTU-y9YjNcKnU_N259g&quot;,&quot;object_id&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;object_type&quot;:&quot;Course&quot;,&quot;add_all_users&quot;:false,&quot;user_ids&quot;:[&quot;66c304dd-a163-4fe6-8d19-27b0a637cdf3&quot;],&quot;search_text&quot;:&quot;&quot;,&quot;filters&quot;:{&quot;territories&quot;:[],&quot;is_a_manager&quot;:&quot;&quot;,&quot;organizationalGroups&quot;:[],&quot;userGroups&quot;:[]},&quot;start_date&quot;:&quot;Mon Jan 10 2022&quot;,&quot;goal_date&quot;:&quot;Mon Jan 10 2022&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/vib/v1/admin/assign_users.json</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/vib/v1/admin/assign_users.json?object_id=42ca9c07-6635-4af7-a2bb-69538a20a25c&amp;object_type=Course&amp;list_type=remaining&amp;page=1&amp;filters=%7B%22territories%22:[],%22is_a_manager%22:%22%22,%22organizationalGroups%22:[],%22userGroups%22:[]%7D&amp;search_text=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="list_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">list_type</stringProp>
                  <stringProp name="Argument.value">remaining</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="object_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">object_type</stringProp>
                  <stringProp name="Argument.value">Course</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="page" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">page</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="filters" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">filters</stringProp>
                  <stringProp name="Argument.value">{&quot;territories&quot;:[],&quot;is_a_manager&quot;:&quot;&quot;,&quot;organizationalGroups&quot;:[],&quot;userGroups&quot;:[]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="object_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">object_id</stringProp>
                  <stringProp name="Argument.value">42ca9c07-6635-4af7-a2bb-69538a20a25c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="search_text" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">search_text</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/vib/v1/admin/assign_users.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/vib/v1/admin/assign_users.json?object_id=42ca9c07-6635-4af7-a2bb-69538a20a25c&amp;object_type=Course&amp;list_type=existing" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="list_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">list_type</stringProp>
                  <stringProp name="Argument.value">existing</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="object_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">object_type</stringProp>
                  <stringProp name="Argument.value">Course</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="object_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">object_id</stringProp>
                  <stringProp name="Argument.value">42ca9c07-6635-4af7-a2bb-69538a20a25c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/vib/v1/admin/assign_users.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="ClickOnLoginAsUser" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>39824.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">19912</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 39824 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/filters.json?with_managers=true" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="with_managers" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">with_managers</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v2/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/filters.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/v2/admin/available_languages.json" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/v2/admin/available_languages.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users/66c304dd-a163-4fe6-8d19-27b0a637cdf3" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">admin/accounts/d5d652f7-90b7-4b5b-a44a-ca28830beb61/users/66c304dd-a163-4fe6-8d19-27b0a637cdf3</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>5584.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">2792</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 5584 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/users/66c304dd-a163-4fe6-8d19-27b0a637cdf3/impersonate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">admin/users/66c304dd-a163-4fe6-8d19-27b0a637cdf3/impersonate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/javascript, */*; q=0.01</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">A6OXC2gluF0LwcNOO8P-R5RsmTnnN9wza9LHTA_k--f0rHDt57ma8KBp7tNE7jmKhFRP7ahWTZLIghvCPDi9ag</stringProp>
                </elementProp>
                <elementProp name="X-Requested-With" elementType="Header">
                  <stringProp name="Header.name">X-Requested-With</stringProp>
                  <stringProp name="Header.value">XMLHttpRequest</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>10600.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">5300</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 10600 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">8p2oZV03hEjS-tFUgi4NMSmK6u7iseyCoa9m8vzsYcYFkk-D0qum5XlS_Mn9A8r8ObI8Oq3QfSMC_7p8zzAnSw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">8p2oZV03hEjS-tFUgi4NMSmK6u7iseyCoa9m8vzsYcYFkk-D0qum5XlS_Mn9A8r8ObI8Oq3QfSMC_7p8zzAnSw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getCourseWithBasicDetails&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query getCourseWithBasicDetails($vibCourseId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    userActivityPoints\n    completedPercentage\n    isCourseEnabled\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">8p2oZV03hEjS-tFUgi4NMSmK6u7iseyCoa9m8vzsYcYFkk-D0qum5XlS_Mn9A8r8ObI8Oq3QfSMC_7p8zzAnSw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;EnrolledCourses&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query EnrolledCourses {\n  enrolledCourses {\n    id\n    title\n    goalDate\n    startDate\n    activityStatus\n    status\n    outlineUrl\n    courseColorCode\n    courseProgress {\n      id\n      canUserSeeNpsSurvey\n      __typename\n    }\n    canStartCourse\n    isFirstLevelOneCollectionCompletedByUser\n    levelCourseType\n    courseIndexPageUrl\n    isCourseEnabled\n    jumpBackIn {\n      courseId\n      jumpBackInPath\n      __typename\n    }\n    currentUserActionPlanTask {\n      id\n      url\n      __typename\n    }\n    checkCourseActivityStartedOrNot\n    completedPercentage\n    courseProgressStats {\n      ... on LevelTwoCourseProgressStats {\n        id\n        overallCourseCompletePercentage\n        __typename\n      }\n      ... on LevelThreeCourseProgressStats {\n        id\n        overallCourseCompletePercentage\n        __typename\n      }\n      ... on LevelFourCourseProgressStats {\n        id\n        overallCourseCompletePercentage\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">8p2oZV03hEjS-tFUgi4NMSmK6u7iseyCoa9m8vzsYcYFkk-D0qum5XlS_Mn9A8r8ObI8Oq3QfSMC_7p8zzAnSw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;ActionPlanTasks&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query ActionPlanTasks($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    durationMinutes\n    activityPoints\n    displayTitle\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">8p2oZV03hEjS-tFUgi4NMSmK6u7iseyCoa9m8vzsYcYFkk-D0qum5XlS_Mn9A8r8ObI8Oq3QfSMC_7p8zzAnSw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[11]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;GET_WIDGETS&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query GET_WIDGETS {\n  widgets {\n    id\n    widgetOne\n    widgetTwo\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">8p2oZV03hEjS-tFUgi4NMSmK6u7iseyCoa9m8vzsYcYFkk-D0qum5XlS_Mn9A8r8ObI8Oq3QfSMC_7p8zzAnSw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[12]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;recommendedBlogPosts&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query recommendedBlogPosts {\n  recommendedBlogPosts {\n    title\n    formattedPublishedDate\n    duration\n    url\n    imageUrl\n    imageAltText\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">8p2oZV03hEjS-tFUgi4NMSmK6u7iseyCoa9m8vzsYcYFkk-D0qum5XlS_Mn9A8r8ObI8Oq3QfSMC_7p8zzAnSw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[13]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">8p2oZV03hEjS-tFUgi4NMSmK6u7iseyCoa9m8vzsYcYFkk-D0qum5XlS_Mn9A8r8ObI8Oq3QfSMC_7p8zzAnSw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[14]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="ClickOnContinueInTodayPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">8p2oZV03hEjS-tFUgi4NMSmK6u7iseyCoa9m8vzsYcYFkk-D0qum5XlS_Mn9A8r8ObI8Oq3QfSMC_7p8zzAnSw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;contentstackSeniorLeaderMessage&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query contentstackSeniorLeaderMessage($vibCourseId: ID!) {\n  contentstackSeniorLeaderMessage(vibCourseId: $vibCourseId) {\n    id\n    title\n    header\n    seniorLeaderMessageContents {\n      __typename\n      ... on SeniorLeaderMessageTextContent {\n        richText\n        __typename\n      }\n      ... on SeniorLeaderMessageVideoContent {\n        video {\n          id\n          fileUrl\n          title\n          contentType\n          thumbnailUrl\n          subtitles {\n            id\n            language\n            label\n            url\n            __typename\n          }\n          showAssociatedContent\n          associatedContentPosition\n          associatedContentWidth\n          associatedContent {\n            type\n            ... on CardReference {\n              ...ImageAssociatedContentCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n  contentstackCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowToTakeSeniorLeaderMessage\n    courseGoals {\n      id\n      goal {\n        id\n        title\n        __typename\n      }\n      __typename\n    }\n    selectedGoals {\n      id\n      title\n      __typename\n    }\n    userSentimentSurveyProgress {\n      id\n      status\n      __typename\n    }\n    courseFeatureList {\n      id\n      sentimentSurvey1\n      sentimentSurvey2\n      sentimentSurvey3\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment ImageAssociatedContentCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">8p2oZV03hEjS-tFUgi4NMSmK6u7iseyCoa9m8vzsYcYFkk-D0qum5XlS_Mn9A8r8ObI8Oq3QfSMC_7p8zzAnSw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="SubmitTheTrainingGoalActivity" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createUserCourseGoals&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibGoalIds&quot;:[&quot;9abc5f3b-a443-40ac-b2d6-4245c5197a93&quot;,&quot;869b1ab3-aa35-49c1-b784-6e028fd68cae&quot;]},&quot;query&quot;:&quot;mutation createUserCourseGoals($vibCourseId: ID!, $vibGoalIds: [ID!]!) {\n  createUserCourseGoals(input: {vibCourseId: $vibCourseId, vibGoalIds: $vibGoalIds}) {\n    errorMessages\n    success\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">8p2oZV03hEjS-tFUgi4NMSmK6u7iseyCoa9m8vzsYcYFkk-D0qum5XlS_Mn9A8r8ObI8Oq3QfSMC_7p8zzAnSw</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="CompleteThePreTrainingsurveyByUsingnext" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/learn" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">learn</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>48601.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">24300.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 48601 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getCourseWithBasicDetails&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query getCourseWithBasicDetails($vibCourseId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    userActivityPoints\n    completedPercentage\n    isCourseEnabled\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;courseSentimentSurveyProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibSentimentSurveyProgressId&quot;:&quot;3d5f5a43-49af-4d86-b589-7cd0c88c4433&quot;},&quot;query&quot;:&quot;query courseSentimentSurveyProgress($vibCourseId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  courseSentimentSurveyProgress(vibCourseId: $vibCourseId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId) {\n    id\n    surveyType\n    status\n    isUserAllowedToTakeSentimentSurvey\n    course {\n      id\n      title\n      status\n      __typename\n    }\n    sentimentSurvey {\n      id\n      title\n      surveyQuestions {\n        id\n        question\n        description\n        surveyAnswers {\n          id\n          choiceText\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    currentSurveyQuestion {\n      id\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="CompleteThePreAssessmentExamSelectCorretAnswer" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3d5f5a43-49af-4d86-b589-7cd0c88c4433&quot;,&quot;vibSurveyQuestionId&quot;:&quot;9723bcbc-18c9-4bae-929b-e830d3bdb0c4&quot;,&quot;vibSurveyAnswerId&quot;:&quot;7a811c21-6180-4f44-a3ee-a8404abe7d18&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3d5f5a43-49af-4d86-b589-7cd0c88c4433&quot;,&quot;vibSurveyQuestionId&quot;:&quot;42a74d82-67bd-40c6-babc-b0fcce3341de&quot;,&quot;vibSurveyAnswerId&quot;:&quot;7a811c21-6180-4f44-a3ee-a8404abe7d18&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3d5f5a43-49af-4d86-b589-7cd0c88c4433&quot;,&quot;vibSurveyQuestionId&quot;:&quot;772561f9-7883-42e6-97d5-6d5ed2cdc45d&quot;,&quot;vibSurveyAnswerId&quot;:&quot;7a811c21-6180-4f44-a3ee-a8404abe7d18&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3d5f5a43-49af-4d86-b589-7cd0c88c4433&quot;,&quot;vibSurveyQuestionId&quot;:&quot;6e5cd4c3-74c2-4b6e-ab3b-233efe4e92b8&quot;,&quot;vibSurveyAnswerId&quot;:&quot;7a811c21-6180-4f44-a3ee-a8404abe7d18&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3d5f5a43-49af-4d86-b589-7cd0c88c4433&quot;,&quot;vibSurveyQuestionId&quot;:&quot;0135c037-82b9-4724-9739-0980c6587f02&quot;,&quot;vibSurveyAnswerId&quot;:&quot;7a811c21-6180-4f44-a3ee-a8404abe7d18&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3d5f5a43-49af-4d86-b589-7cd0c88c4433&quot;,&quot;vibSurveyQuestionId&quot;:&quot;32fcb218-c7e0-410b-a8ff-8bc8b6081800&quot;,&quot;vibSurveyAnswerId&quot;:&quot;7a811c21-6180-4f44-a3ee-a8404abe7d18&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3d5f5a43-49af-4d86-b589-7cd0c88c4433&quot;,&quot;vibSurveyQuestionId&quot;:&quot;fd13510d-9258-4492-bf41-dfb4413654ac&quot;,&quot;vibSurveyAnswerId&quot;:&quot;7a811c21-6180-4f44-a3ee-a8404abe7d18&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3d5f5a43-49af-4d86-b589-7cd0c88c4433&quot;,&quot;vibSurveyQuestionId&quot;:&quot;2897d74b-bcab-4a29-943d-0efabc9ea799&quot;,&quot;vibSurveyAnswerId&quot;:&quot;4b2cf2ae-b9dc-4db8-99df-6a2b0218ea80&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3d5f5a43-49af-4d86-b589-7cd0c88c4433&quot;,&quot;vibSurveyQuestionId&quot;:&quot;01de0b60-9f84-4a83-ac31-8d4f02d99cde&quot;,&quot;vibSurveyAnswerId&quot;:&quot;4b2cf2ae-b9dc-4db8-99df-6a2b0218ea80&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createSentimentSurveyAnswer&quot;,&quot;variables&quot;:{&quot;vibSentimentSurveyProgressId&quot;:&quot;3d5f5a43-49af-4d86-b589-7cd0c88c4433&quot;,&quot;vibSurveyQuestionId&quot;:&quot;8557d5bb-2538-41d5-a019-3c518d61dba0&quot;,&quot;vibSurveyAnswerId&quot;:&quot;4b2cf2ae-b9dc-4db8-99df-6a2b0218ea80&quot;},&quot;query&quot;:&quot;mutation createSentimentSurveyAnswer($vibSurveyAnswerId: ID!, $vibSurveyQuestionId: ID!, $vibSentimentSurveyProgressId: ID!) {\n  createSentimentSurveyAnswer(input: {vibSurveyAnswerId: $vibSurveyAnswerId, vibSurveyQuestionId: $vibSurveyQuestionId, vibSentimentSurveyProgressId: $vibSentimentSurveyProgressId}) {\n    success\n    errorMessages\n    nextActivityPath\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="ClickOnContinueAfterFinishingPreAssessmentExam" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="CompleteTheBaselineCheckActivity" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;c630d307-194a-426c-b2df-a7d0be82e238&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;c630d307-194a-426c-b2df-a7d0be82e238&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;c635bb4e-a373-447d-bc9c-0634605c31cc&quot;,&quot;vibExamQuestionId&quot;:&quot;cfb8eda9-ef7b-457b-a7bb-7cc0fe4f1fb5&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;21cbf723-7c64-4806-a490-fc3473b2e71a&quot;,&quot;vibExamQuestionId&quot;:&quot;e2f1d034-9b16-4b73-baec-e0cdfd0a1ba3&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;7da4124c-5cf9-4e8a-94b6-b96257205136&quot;,&quot;vibExamQuestionId&quot;:&quot;5942afad-082c-45c2-b6a5-61e2a8ae5536&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c630d307-194a-426c-b2df-a7d0be82e238&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;f4375d70-730f-4845-9e0d-e52fadab5598&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[11]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[12]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[13]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;f4375d70-730f-4845-9e0d-e52fadab5598&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[14]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;423544f8-d60a-4d37-beea-34957d95bce3&quot;,&quot;vibExamQuestionId&quot;:&quot;288f2a00-4607-4a6f-b155-f688ef6299e2&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[15]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;fc02fb89-a68a-456a-905d-e6947c33d971&quot;,&quot;vibExamQuestionId&quot;:&quot;581c66d1-310e-4ec7-bc39-38436c3ff8ea&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[16]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;e56ffefc-734c-42ee-913c-10bdd18932e5&quot;,&quot;vibExamQuestionId&quot;:&quot;93375b40-3a64-494f-838a-8eb0fbf67e45&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[17]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;9553ce87-60da-4424-ade7-4882a129f294&quot;,&quot;vibExamQuestionId&quot;:&quot;b3f9e5db-4f80-45c0-9838-fb15729dd429&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[18]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[19]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[20]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c630d307-194a-426c-b2df-a7d0be82e238&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[21]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f4375d70-730f-4845-9e0d-e52fadab5598&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[22]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;11503a2c-5e30-45bb-bcc5-e3d7bb7645ae&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[23]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[24]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[25]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;11503a2c-5e30-45bb-bcc5-e3d7bb7645ae&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[26]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;0114dd08-b642-42d6-a2e7-6144db01b570&quot;,&quot;vibExamQuestionId&quot;:&quot;45392d2a-c0ec-4bd1-a5cf-d1aaf741afec&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[27]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;846c5be9-d0f2-4c45-8ab2-d23cf9e1f9fa&quot;,&quot;vibExamQuestionId&quot;:&quot;d87bd629-f33a-459f-82ce-caa31201c254&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[28]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;9bd43dac-9edf-4592-ad70-d38971a65bfa&quot;,&quot;vibExamQuestionId&quot;:&quot;4dd493d3-b07b-4ef2-89c0-d0a7bdf634dc&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[29]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;80a0df6f-7fa4-4488-9d9a-43bc624517a0&quot;,&quot;vibExamQuestionId&quot;:&quot;374bae35-a679-418c-9291-2eade0c40803&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[30]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[31]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[32]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c630d307-194a-426c-b2df-a7d0be82e238&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[33]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f4375d70-730f-4845-9e0d-e52fadab5598&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[34]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;11503a2c-5e30-45bb-bcc5-e3d7bb7645ae&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[35]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;f5d4a9f7-14d4-420f-a164-415d1ebc6190&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[36]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[37]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[38]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;f5d4a9f7-14d4-420f-a164-415d1ebc6190&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[39]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;1d4f785f-9c01-4ddb-865e-9ddfffc4b260&quot;,&quot;vibExamQuestionId&quot;:&quot;0e68f7b5-a3f0-48e1-b8df-22cd13d4ee75&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[40]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;d505f0a5-985d-4726-a2a5-7e74b13f59fa&quot;,&quot;vibExamQuestionId&quot;:&quot;807ff940-fda8-43f8-a02c-f8f54bc73c30&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[41]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;e8577876-7446-4364-b163-ac77ac8dbeb7&quot;,&quot;vibExamQuestionId&quot;:&quot;a869fb88-7ec2-41cc-a62d-636f22d47fee&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[42]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[43]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[44]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c630d307-194a-426c-b2df-a7d0be82e238&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[45]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f4375d70-730f-4845-9e0d-e52fadab5598&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[46]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;11503a2c-5e30-45bb-bcc5-e3d7bb7645ae&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[47]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f5d4a9f7-14d4-420f-a164-415d1ebc6190&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[48]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;c2d3591b-1b37-4011-9cc9-2e652a55bc79&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[49]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[50]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[51]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;c2d3591b-1b37-4011-9cc9-2e652a55bc79&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[52]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;5ec03505-d2bb-4196-926b-122a874663e0&quot;,&quot;vibExamQuestionId&quot;:&quot;4a7da208-40df-4ee5-b2c0-048890b30b1f&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[53]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;0e1b9c38-614a-466a-8b98-fae94be400be&quot;,&quot;vibExamQuestionId&quot;:&quot;e1d7188b-541f-42bb-85d9-277da1c3fce1&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[54]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;7da8e70d-2186-46da-a3d8-f491db957d1d&quot;,&quot;vibExamQuestionId&quot;:&quot;81ae718c-24e5-4819-8494-d165dad17fea&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[55]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;38bf8a1d-0518-4950-9e28-2777e83d1ec8&quot;,&quot;vibExamQuestionId&quot;:&quot;90df5732-3a73-4079-a3d2-44c14cbf297e&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[56]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;f92495df-180d-471b-8a71-b1fa4e460a0b&quot;,&quot;vibExamQuestionId&quot;:&quot;de5b3b52-a86e-463e-b0e9-91c91c6ff721&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[57]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[58]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[59]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c630d307-194a-426c-b2df-a7d0be82e238&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[60]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f4375d70-730f-4845-9e0d-e52fadab5598&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[61]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;11503a2c-5e30-45bb-bcc5-e3d7bb7645ae&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[62]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f5d4a9f7-14d4-420f-a164-415d1ebc6190&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[63]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c2d3591b-1b37-4011-9cc9-2e652a55bc79&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[64]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;10e32266-9a61-4348-9117-fe019cef50e3&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[65]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[66]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[67]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;10e32266-9a61-4348-9117-fe019cef50e3&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[68]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;69837e89-8d9c-463b-beac-97bac65c257e&quot;,&quot;vibExamQuestionId&quot;:&quot;f962b9b0-a477-474c-b511-888470f7a1c7&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[69]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;1e388e18-1b88-4d90-b6e5-3aa77d07404d&quot;,&quot;vibExamQuestionId&quot;:&quot;f45bb9de-fce7-49cd-8fc4-c21c90382b52&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[70]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;d69d9288-0b8b-4437-af14-74e6d4cb9185&quot;,&quot;vibExamQuestionId&quot;:&quot;1b810123-5f39-4ee7-bccc-705d5ee88083&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[71]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[72]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[73]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c630d307-194a-426c-b2df-a7d0be82e238&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[74]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f4375d70-730f-4845-9e0d-e52fadab5598&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[75]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;11503a2c-5e30-45bb-bcc5-e3d7bb7645ae&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[76]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f5d4a9f7-14d4-420f-a164-415d1ebc6190&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[77]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c2d3591b-1b37-4011-9cc9-2e652a55bc79&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[78]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;10e32266-9a61-4348-9117-fe019cef50e3&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[79]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;eae23a6c-fb89-4e00-9219-99b46abc1dfe&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[80]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[81]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[82]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;eae23a6c-fb89-4e00-9219-99b46abc1dfe&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[83]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;3c290ac5-59c4-4262-b70c-3b38a463518c&quot;,&quot;vibExamQuestionId&quot;:&quot;238084ce-9a62-47b6-958d-f868b7ee880a&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[84]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;867c5d40-4c33-4139-9f51-f1562cd216b6&quot;,&quot;vibExamQuestionId&quot;:&quot;04adf8d6-c619-427a-b9a3-3f426e884bca&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[85]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;95d6f9df-eff2-4fe8-b99e-b0e5d1ea2f9b&quot;,&quot;vibExamQuestionId&quot;:&quot;55920d4c-7442-4412-b477-d3f56b0b7957&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[86]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;573181dc-68b1-435c-bbbb-f87c8d7687bf&quot;,&quot;vibExamQuestionId&quot;:&quot;e830c3d0-ce0e-4d89-8e5b-8ad24e5ee70c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[87]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[88]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[89]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c630d307-194a-426c-b2df-a7d0be82e238&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[90]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f4375d70-730f-4845-9e0d-e52fadab5598&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[91]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;11503a2c-5e30-45bb-bcc5-e3d7bb7645ae&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[92]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f5d4a9f7-14d4-420f-a164-415d1ebc6190&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[93]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c2d3591b-1b37-4011-9cc9-2e652a55bc79&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[94]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;10e32266-9a61-4348-9117-fe019cef50e3&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[95]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;eae23a6c-fb89-4e00-9219-99b46abc1dfe&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[96]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;646475f1-18cc-48a5-9060-2c132729366d&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[97]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[98]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[99]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;646475f1-18cc-48a5-9060-2c132729366d&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[100]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;b00c07fe-f0f1-47c3-8f1e-46e802ba3d17&quot;,&quot;vibExamQuestionId&quot;:&quot;db6023ed-680f-4bec-8455-fc36e88f7bf8&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[101]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;97b0807f-333d-4b6f-a66c-9e471c4d65b9&quot;,&quot;vibExamQuestionId&quot;:&quot;d4ac7836-9d92-426f-b5ff-7fd5971c29b2&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[102]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;9d11b506-9ed7-4cee-b987-a19fe11be145&quot;,&quot;vibExamQuestionId&quot;:&quot;a28c0b6d-33a9-4900-bee9-d8288418c2de&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[103]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;f6a30a2f-7426-48ef-b5fd-0c51f86b3f3c&quot;,&quot;vibExamQuestionId&quot;:&quot;973f2fc6-1c04-4626-a11a-4e04898be64b&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[104]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;6bd7e93d-a447-4cf0-8173-f2f1b14411a8&quot;,&quot;vibExamQuestionId&quot;:&quot;e8309fb4-eacf-487d-b04d-a02792008a3a&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[105]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[106]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[107]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c630d307-194a-426c-b2df-a7d0be82e238&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[108]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f4375d70-730f-4845-9e0d-e52fadab5598&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[109]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;11503a2c-5e30-45bb-bcc5-e3d7bb7645ae&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[110]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f5d4a9f7-14d4-420f-a164-415d1ebc6190&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[111]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c2d3591b-1b37-4011-9cc9-2e652a55bc79&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[112]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;10e32266-9a61-4348-9117-fe019cef50e3&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[113]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;eae23a6c-fb89-4e00-9219-99b46abc1dfe&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[114]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;646475f1-18cc-48a5-9060-2c132729366d&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[115]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;42469edb-faf5-4c0f-b730-c02eae0bc289&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[116]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[117]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[118]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;42469edb-faf5-4c0f-b730-c02eae0bc289&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[119]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;16d1b231-b238-40cc-ad3f-ff87dc4c98c2&quot;,&quot;vibExamQuestionId&quot;:&quot;65111165-9e2d-40db-87fc-ad7a84fdf725&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[120]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;dcbb571f-2593-4e7d-8d10-3cd331eb60f3&quot;,&quot;vibExamQuestionId&quot;:&quot;fa69bcec-da1d-41a2-b045-b08d7a8e0e7d&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[121]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;924f43b9-2ba4-40c2-85d8-f2561a545055&quot;,&quot;vibExamQuestionId&quot;:&quot;a8728c8b-9512-4084-b109-ad7ea18dd0ea&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[122]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;31baa4d0-01cf-45c4-b4d3-4e43559cfb79&quot;,&quot;vibExamQuestionId&quot;:&quot;61ab6952-c79f-4cd5-8fab-d983eacf86fe&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[123]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[124]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[125]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c630d307-194a-426c-b2df-a7d0be82e238&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[126]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f4375d70-730f-4845-9e0d-e52fadab5598&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[127]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;11503a2c-5e30-45bb-bcc5-e3d7bb7645ae&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[128]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f5d4a9f7-14d4-420f-a164-415d1ebc6190&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[129]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c2d3591b-1b37-4011-9cc9-2e652a55bc79&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[130]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;10e32266-9a61-4348-9117-fe019cef50e3&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[131]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;eae23a6c-fb89-4e00-9219-99b46abc1dfe&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[132]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;646475f1-18cc-48a5-9060-2c132729366d&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[133]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;42469edb-faf5-4c0f-b730-c02eae0bc289&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[134]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;3fda9553-6119-4310-a604-493a555be0e4&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation StartAssessmentAttempt($vibCourseId: ID!, $vibExamId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  startAssessmentAttempt(input: {vibCourseId: $vibCourseId, vibExamId: $vibExamId, assessmentAttemptType: $assessmentAttemptType}) {\n    errorMessages\n    success\n    assessmentAttemptId\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[135]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetAssessmentAttemptExamProgress&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetAssessmentAttemptExamProgress($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    status\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        isUserAllowedToTakeAssessment(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId)\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            title\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            isValid\n            __typename\n          }\n          __typename\n        }\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[136]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[137]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetExamQuestionAnswers&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibExamId&quot;:&quot;3fda9553-6119-4310-a604-493a555be0e4&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query VibGetExamQuestionAnswers($vibCourseId: ID!, $vibExamId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentType\n    courseAssessment {\n      id\n      assessment {\n        id\n        assessmentCurrentExam(vibAssessmentAttemptId: $vibAssessmentAttemptId, vibCourseId: $vibCourseId) {\n          id\n          title\n          status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n          assessmentExamCurrentQuestion(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n            id\n            question\n            submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n              id\n              text\n              weight\n              __typename\n            }\n            answers {\n              id\n              title\n              weight\n              __typename\n            }\n            __typename\n          }\n          assessmentExamQuestions {\n            id\n            assessmentQuestion {\n              id\n              question\n              isValid\n              submittedAnswer(vibExamId: $vibExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n                id\n                text\n                weight\n                __typename\n              }\n              answers {\n                id\n                title\n                weight\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[138]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;bbb098d7-be73-4ca7-9de5-55b1e87c0b32&quot;,&quot;vibExamQuestionId&quot;:&quot;6c8bd53f-2836-4850-9cfe-750a009a091a&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[139]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;217015ba-7193-4e38-b2c4-6303088515b7&quot;,&quot;vibExamQuestionId&quot;:&quot;e9642898-9fa7-4974-9689-1d62fdbb3fab&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[140]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;9c98666d-aae1-4758-bc3b-4e8955f31c44&quot;,&quot;vibExamQuestionId&quot;:&quot;b7e85957-1c54-4b58-ab8a-c7aa58e0708e&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[141]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;aa705a10-e693-4d45-940a-1b5d38b822d1&quot;,&quot;vibExamQuestionId&quot;:&quot;17b65c2d-cd3a-43e1-909e-5a0277940640&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[142]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;createAssessmentExamUserAnswer&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAnswerId&quot;:&quot;4d5bf616-34f2-49ff-8ec5-0123eceb4b68&quot;,&quot;vibExamQuestionId&quot;:&quot;6eb093bb-5597-4c76-86fb-3f9e718ddb47&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;mutation createAssessmentExamUserAnswer($vibCourseId: ID!, $vibExamQuestionId: ID!, $vibAnswerId: ID!, $vibAssessmentAttemptId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  createAssessmentExamUserAnswer(input: {vibCourseId: $vibCourseId, vibExamQuestionId: $vibExamQuestionId, vibAnswerId: $vibAnswerId, vibAssessmentAttemptId: $vibAssessmentAttemptId}) {\n    errorMessages\n    success\n    showStatusPage\n    assessmentExam {\n      id\n      percentageOfQuestionCompleted(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n      __typename\n    }\n    courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n      id\n      totalNoOfQuestions\n      totalCompletedQuestions\n      assessmentType\n      courseAssessment {\n        id\n        assessment {\n          id\n          isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[143]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseAssessment&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;assessmentAttemptType&quot;:&quot;baseline&quot;},&quot;query&quot;:&quot;query VibGetCourseAssessment($vibCourseId: ID!, $assessmentAttemptType: AssessmentTypeEnum!) {\n  contentstackCourseAssessment(vibCourseId: $vibCourseId) {\n    id\n    title\n    isUserAllowedToTakeAssessment(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId)\n    userAssessmentAttempt(assessmentAttemptType: $assessmentAttemptType, vibCourseId: $vibCourseId) {\n      id\n      __typename\n    }\n    totalNumOfExams\n    totalMinutes\n    instructionFirst(assessmentAttemptType: $assessmentAttemptType)\n    instructionSecond(assessmentAttemptType: $assessmentAttemptType)\n    numOfSections\n    isAllExamCompleted(vibCourseId: $vibCourseId, attemptState: $assessmentAttemptType)\n    assessmentAssessmentExams {\n      id\n      assessmentExam {\n        image {\n          id\n          url\n          __typename\n        }\n        id\n        title\n        status(vibCourseId: $vibCourseId, assessmentAttemptType: $assessmentAttemptType)\n        estimatedTime\n        summary\n        isValid\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[144]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[145]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c630d307-194a-426c-b2df-a7d0be82e238&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[146]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f4375d70-730f-4845-9e0d-e52fadab5598&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[147]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;11503a2c-5e30-45bb-bcc5-e3d7bb7645ae&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[148]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;f5d4a9f7-14d4-420f-a164-415d1ebc6190&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[149]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;c2d3591b-1b37-4011-9cc9-2e652a55bc79&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[150]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;10e32266-9a61-4348-9117-fe019cef50e3&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[151]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;eae23a6c-fb89-4e00-9219-99b46abc1dfe&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[152]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;646475f1-18cc-48a5-9060-2c132729366d&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[153]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;42469edb-faf5-4c0f-b730-c02eae0bc289&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[154]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;completedUserAssessmentExamResult&quot;,&quot;variables&quot;:{&quot;vibAssessmentExamId&quot;:&quot;3fda9553-6119-4310-a604-493a555be0e4&quot;,&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query completedUserAssessmentExamResult($vibAssessmentExamId: ID!, $vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  completedUserAssessmentExamResult(vibAssessmentExamId: $vibAssessmentExamId, vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    assessmentExamTitle\n    percentage\n    percentageDiffToBenchmark\n    noOfQuestions\n    performanceCategory\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[155]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[156]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;courseAssessmentAttempt&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibAssessmentAttemptId&quot;:&quot;3c67e289-ede3-4cc9-9fb7-5adf87de3316&quot;},&quot;query&quot;:&quot;query courseAssessmentAttempt($vibCourseId: ID!, $vibAssessmentAttemptId: ID!) {\n  courseAssessmentAttempt(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n    id\n    totalNoOfQuestions\n    totalCompletedQuestions\n    overallScore\n    assessmentType\n    courseAssessment {\n      id\n      course {\n        id\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        assessmentAssessmentExams {\n          id\n          assessmentExam {\n            id\n            status(vibCourseId: $vibCourseId, vibAssessmentAttemptId: $vibAssessmentAttemptId)\n            __typename\n          }\n          __typename\n        }\n        userAssessmentResult(vibAssessmentAttemptId: $vibAssessmentAttemptId) {\n          id\n          assessmentExamTitle\n          percentage\n          percentageDiffToBenchmark\n          noOfQuestions\n          performanceCategory\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">sJWfrOYIntu6z_MHLRdxgB5bzf7hKGF6po3IxKdmGzRHmnhKaZS8dhFn3ppSOrZNDmMbKq5J8NsF3RRKlLpduQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[157]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/learn" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">learn</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[158]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>239977.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">119988.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 239977 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[159]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[160]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;getCourseWithBasicDetails&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query getCourseWithBasicDetails($vibCourseId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    userActivityPoints\n    completedPercentage\n    isCourseEnabled\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[161]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[162]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelThreeCollectionCourse&quot;,&quot;variables&quot;:{&quot;vibLevelThreeCollectionCourseId&quot;:&quot;72fb0787-4edc-4884-9ecc-65a05b08ee8c&quot;,&quot;vibLevelThreeLevelTwoCollectionId&quot;:&quot;5500be58-b10f-4f6c-9766-538a6f298d16&quot;},&quot;query&quot;:&quot;query vibLevelThreeCollectionCourse($vibLevelThreeCollectionCourseId: ID!, $vibLevelThreeLevelTwoCollectionId: ID!) {\n  vibLevelThreeCollectionCourse(vibLevelThreeCollectionCourseId: $vibLevelThreeCollectionCourseId) {\n    id\n    previousCompletedLevelTwoCollection(vibLevelThreeLevelTwoCollectionId: $vibLevelThreeLevelTwoCollectionId) {\n      id\n      title\n      outroText\n      activityPoints\n      __typename\n    }\n    levelThreeCourse {\n      id\n      title\n      courseId\n      canStartCourse\n      isCourseEnabled\n      hasSeniorLeaderMessage\n      coreLevelTwoCollectionCount\n      enrichmentLevelTwoCollectionCount\n      isAllCoreContentCompleted\n      hasEnrichmentStarted\n      image {\n        id\n        url\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        activityPoints\n        __typename\n      }\n      userCourseProgress {\n        id\n        status\n        __typename\n      }\n      jumpBackIn(vibLevelThreeCollectionCourseId: $vibLevelThreeCollectionCourseId, vibLevelThreeLevelTwoCollectionId: $vibLevelThreeLevelTwoCollectionId) {\n        courseId\n        courseTitle\n        levelTwoCollectionId\n        levelTwoCollectionTitle\n        levelTwoCollectionDescription\n        levelTwoCollectionDescriptionTitle\n        levelOneCollectionCount\n        levelTwoCollectionIntroText\n        completedLevelOneCollectionCount\n        jumpBackInTitle\n        jumpBackInDesc\n        jumpBackInPath\n        __typename\n      }\n      courseLevelThreeCollections {\n        id\n        contentType\n        isUserAllowToVisit(vibLevelThreeCollectionCourseId: $vibLevelThreeCollectionCourseId, vibLevelThreeLevelTwoCollectionId: $vibLevelThreeLevelTwoCollectionId)\n        levelThreeCollection {\n          id\n          levelThreeLevelTwoCollections {\n            id\n            position\n            levelTwoCollection {\n              id\n              title\n              description\n              introText\n              outroText\n              activityPoints\n              levelOneCollectionsCount\n              firstLevelTwoLevelOneCollection {\n                id\n                __typename\n              }\n              levelOneCollections {\n                id\n                title\n                description\n                __typename\n              }\n              exam {\n                id\n                title\n                __typename\n              }\n              image {\n                id\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        levelThreeCollectionProgress {\n          id\n          status\n          levelTwoCollectionProgresses {\n            id\n            status\n            levelTwoCollectionId\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[163]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    status\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        description\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        description\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        id\n        title\n        description\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[164]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="ContinueTheNextTopicInLearningPage" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;StartCourse&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;mutation StartCourse($vibCourseId: ID!) {\n  startCourse(input: {vibCourseId: $vibCourseId}) {\n    success\n    errorMessages\n    jumpBackIn {\n      jumpBackInPath\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;058f29e2-10e1-4bd2-aaf6-6c09226b9783&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;858e7ccb-63ee-487f-9dd9-ac227b6ce064&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;d32c40a9-5d7b-47cf-93dc-3fd0ec6c16e1&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    status\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        description\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        description\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        id\n        title\n        description\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="SelectTheConsucutiveApproachClickNext" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;2233e1e3-7928-4e5c-be61-24a51145fa83&quot;,&quot;pageProgressId&quot;:&quot;d32c40a9-5d7b-47cf-93dc-3fd0ec6c16e1&quot;,&quot;courseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;c95405ce-e02d-480a-b3e8-c5fa9c50fec8&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;858e7ccb-63ee-487f-9dd9-ac227b6ce064&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;839caa17-35d0-4b87-a386-94d0de2568cb&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    status\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        description\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        description\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        id\n        title\n        description\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;e0c154bb-efc8-4968-8dc9-8db3a2583d0e&quot;,&quot;pageProgressId&quot;:&quot;839caa17-35d0-4b87-a386-94d0de2568cb&quot;,&quot;courseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;ae933ca2-1dbd-48de-a165-8c721ba05472&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;e0c154bb-efc8-4968-8dc9-8db3a2583d0e&quot;,&quot;pageProgressId&quot;:&quot;ae933ca2-1dbd-48de-a165-8c721ba05472&quot;,&quot;courseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;c52a0b9f-0922-4f52-b94f-d3c4ffb8c015&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;e0c154bb-efc8-4968-8dc9-8db3a2583d0e&quot;,&quot;pageProgressId&quot;:&quot;c52a0b9f-0922-4f52-b94f-d3c4ffb8c015&quot;,&quot;courseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[11]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;9b83f5fd-48dd-4652-a98f-4e3d402f1549&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;858e7ccb-63ee-487f-9dd9-ac227b6ce064&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[12]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[13]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[14]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;db3c45e3-e5b2-470b-9c7a-f24b315d00ca&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[15]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    status\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        description\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        description\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        id\n        title\n        description\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[16]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="ClickOnSubmit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;submitPageQuestionAnswer&quot;,&quot;variables&quot;:{&quot;answerIds&quot;:[&quot;03a43155-e9c0-48b4-9521-8ed207fa7621&quot;],&quot;pageProgressId&quot;:&quot;db3c45e3-e5b2-470b-9c7a-f24b315d00ca&quot;,&quot;questionId&quot;:&quot;f48714f7-8934-49d1-8300-380637634fb4&quot;},&quot;query&quot;:&quot;mutation submitPageQuestionAnswer($answerIds: [ID!]!, $pageProgressId: ID!, $questionId: ID!) {\n  submitPageQuestionAnswer(input: {answerIds: $answerIds, pageProgressId: $pageProgressId, questionId: $questionId}) {\n    errorMessages\n    success\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="AfterCompleteIntroductionSelectNextExam" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;5d97061f-0280-4e3b-963c-c5b6f1cac745&quot;,&quot;pageProgressId&quot;:&quot;db3c45e3-e5b2-470b-9c7a-f24b315d00ca&quot;,&quot;courseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;questionId&quot;:&quot;f48714f7-8934-49d1-8300-380637634fb4&quot;},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;477db130-f2e8-435b-9095-db4f2ab3350c&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;858e7ccb-63ee-487f-9dd9-ac227b6ce064&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;1b4aa2b4-7a48-40e1-9c15-36a880c56345&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    status\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        description\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        description\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        id\n        title\n        description\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;0a1a9ee9-9809-4adb-8d00-2a24c6d4a308&quot;,&quot;pageProgressId&quot;:&quot;1b4aa2b4-7a48-40e1-9c15-36a880c56345&quot;,&quot;courseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;questionId&quot;:null},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelTwoLevelOneCollection&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;vibLevelTwoLevelOneCollectionId&quot;:&quot;f439da54-4065-4ccf-b897-d66b4f89ba08&quot;,&quot;levelTwoCollectionProgressId&quot;:&quot;858e7ccb-63ee-487f-9dd9-ac227b6ce064&quot;},&quot;query&quot;:&quot;query vibLevelTwoLevelOneCollection($vibCourseId: ID!, $vibLevelTwoLevelOneCollectionId: ID!, $levelTwoCollectionProgressId: ID!) {\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    title\n    levelCourse {\n      id\n      type\n      ... on LevelTwoCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelThreeCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      ... on LevelFourCourse {\n        levelTwoCollectionCount\n        currentLevelTwoCollectionCount\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n  vibLevelTwoLevelOneCollection(vibCourseId: $vibCourseId, vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId) {\n    id\n    position\n    levelTwoCollection {\n      id\n      title\n      levelOneCollectionCount\n      exam {\n        id\n        title\n        __typename\n      }\n      levelTwoLevelOneCollections {\n        id\n        position\n        levelOneCollection {\n          id\n          title\n          levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n            id\n            status\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      levelTwoCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        parent {\n          id\n          __typename\n        }\n        contentType\n        nextLevelTwoCollection {\n          id\n          title\n          __typename\n        }\n        __typename\n      }\n      levelOneCollections {\n        id\n        title\n        levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    levelOneCollection {\n      id\n      title\n      levelOneCollectionProgress(levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n        id\n        status\n        __typename\n      }\n      pages {\n        id\n        pageProgress(vibLevelTwoLevelOneCollectionId: $vibLevelTwoLevelOneCollectionId, levelTwoCollectionProgressId: $levelTwoCollectionProgressId) {\n          id\n          status\n          breadcrumbItems {\n            type\n            title\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;pageProgress&quot;,&quot;variables&quot;:{&quot;pageProgressId&quot;:&quot;9c16bdad-2353-4f7c-aa2a-3ab07363b79a&quot;,&quot;shouldUpdateStatus&quot;:true},&quot;query&quot;:&quot;query pageProgress($pageProgressId: ID!, $shouldUpdateStatus: Boolean) {\n  pageProgress(pageProgressId: $pageProgressId, shouldUpdateStatus: $shouldUpdateStatus) {\n    id\n    previousPageProgressId\n    perviousLevelOneCollectionUrl\n    parentLevelTwoCollectionUrl\n    previousLevelTwoCollection {\n      id\n      title\n      __typename\n    }\n    page {\n      id\n      title\n      pageContent {\n        id\n        topConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        bottomConnectiveTissue {\n          id\n          content {\n            type\n            ... on CardReference {\n              ...PageCardReferenceFragment\n              __typename\n            }\n            ... on InlineText {\n              text\n              __typename\n            }\n            ... on TextReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on QuestionReference {\n              question {\n                id\n                question\n                questionType\n                explanation\n                submittedAnswers(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                answers {\n                  id\n                  answer\n                  isCorrectResponse\n                  explanation\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on SurveyQuestionReference {\n              surveyQuestion {\n                id\n                question\n                submittedAnswer(pageProgressId: $pageProgressId) {\n                  id\n                  __typename\n                }\n                surveyAnswers {\n                  id\n                  choiceText\n                  value\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on QuoteReference {\n              text\n              attribution\n              __typename\n            }\n            ... on TestimonialReference {\n              text\n              authors {\n                authorName\n                __typename\n              }\n              __typename\n            }\n            ... on TipReference {\n              text\n              emphasis\n              __typename\n            }\n            ... on ImageReference {\n              url\n              title\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            ... on VideoReference {\n              video {\n                id\n                fileUrl\n                title\n                thumbnailUrl\n                contentType\n                showAssociatedContent\n                associatedContentPosition\n                associatedContentWidth\n                associatedContent {\n                  type\n                  ... on CardReference {\n                    ...PageCardReferenceFragment\n                    __typename\n                  }\n                  ... on InlineText {\n                    text\n                    __typename\n                  }\n                  ... on TextReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on QuestionReference {\n                    question {\n                      id\n                      question\n                      questionType\n                      explanation\n                      submittedAnswers(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      answers {\n                        id\n                        answer\n                        isCorrectResponse\n                        explanation\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on SurveyQuestionReference {\n                    surveyQuestion {\n                      id\n                      question\n                      submittedAnswer(pageProgressId: $pageProgressId) {\n                        id\n                        __typename\n                      }\n                      surveyAnswers {\n                        id\n                        choiceText\n                        value\n                        __typename\n                      }\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on QuoteReference {\n                    text\n                    attribution\n                    __typename\n                  }\n                  ... on TestimonialReference {\n                    text\n                    authors {\n                      authorName\n                      __typename\n                    }\n                    __typename\n                  }\n                  ... on TipReference {\n                    text\n                    emphasis\n                    __typename\n                  }\n                  ... on ImageReference {\n                    url\n                    title\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on VideoReference {\n                    video {\n                      id\n                      fileUrl\n                      title\n                      thumbnailUrl\n                      contentType\n                      subtitles {\n                        id\n                        title\n                        language\n                        label\n                        url\n                        __typename\n                      }\n                      __typename\n                    }\n                    showAssociatedText\n                    associatedText\n                    associatedTextPosition\n                    associatedTextWidth\n                    __typename\n                  }\n                  ... on LearningResource {\n                    title\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                subtitles {\n                  id\n                  title\n                  language\n                  label\n                  url\n                  __typename\n                }\n                __typename\n              }\n              showAssociatedText\n              associatedText\n              associatedTextPosition\n              associatedTextWidth\n              __typename\n            }\n            ... on LearningResource {\n              title\n              url\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        showSecondaryContent\n        secondaryContentPosition {\n          width\n          position\n          __typename\n        }\n        mainContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        secondaryContent {\n          type\n          ... on CardReference {\n            ...PageCardReferenceFragment\n            __typename\n          }\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            showAssociatedContent\n            associatedContentPosition\n            associatedContentWidth\n            associatedContent {\n              type\n              ... on CardReference {\n                ...PageCardReferenceFragment\n                __typename\n              }\n              ... on InlineText {\n                text\n                __typename\n              }\n              ... on TextReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on QuestionReference {\n                question {\n                  id\n                  question\n                  questionType\n                  explanation\n                  submittedAnswers(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  answers {\n                    id\n                    answer\n                    isCorrectResponse\n                    explanation\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on SurveyQuestionReference {\n                surveyQuestion {\n                  id\n                  question\n                  submittedAnswer(pageProgressId: $pageProgressId) {\n                    id\n                    __typename\n                  }\n                  surveyAnswers {\n                    id\n                    choiceText\n                    value\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              ... on QuoteReference {\n                text\n                attribution\n                __typename\n              }\n              ... on TestimonialReference {\n                text\n                authors {\n                  authorName\n                  __typename\n                }\n                __typename\n              }\n              ... on TipReference {\n                text\n                emphasis\n                __typename\n              }\n              ... on ImageReference {\n                url\n                title\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on VideoReference {\n                video {\n                  id\n                  fileUrl\n                  title\n                  thumbnailUrl\n                  contentType\n                  subtitles {\n                    id\n                    title\n                    language\n                    label\n                    url\n                    __typename\n                  }\n                  __typename\n                }\n                showAssociatedText\n                associatedText\n                associatedTextPosition\n                associatedTextWidth\n                __typename\n              }\n              ... on LearningResource {\n                title\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              contentType\n              thumbnailUrl\n              showAssociatedContent\n              associatedContentPosition\n              associatedContentWidth\n              associatedContent {\n                type\n                ... on CardReference {\n                  ...PageCardReferenceFragment\n                  __typename\n                }\n                ... on InlineText {\n                  text\n                  __typename\n                }\n                ... on TextReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on QuestionReference {\n                  question {\n                    id\n                    question\n                    questionType\n                    explanation\n                    submittedAnswers(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    answers {\n                      id\n                      answer\n                      isCorrectResponse\n                      explanation\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on SurveyQuestionReference {\n                  surveyQuestion {\n                    id\n                    question\n                    submittedAnswer(pageProgressId: $pageProgressId) {\n                      id\n                      __typename\n                    }\n                    surveyAnswers {\n                      id\n                      choiceText\n                      value\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                ... on QuoteReference {\n                  text\n                  attribution\n                  __typename\n                }\n                ... on TestimonialReference {\n                  text\n                  authors {\n                    authorName\n                    __typename\n                  }\n                  __typename\n                }\n                ... on TipReference {\n                  text\n                  emphasis\n                  __typename\n                }\n                ... on ImageReference {\n                  url\n                  title\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on VideoReference {\n                  video {\n                    id\n                    fileUrl\n                    title\n                    thumbnailUrl\n                    contentType\n                    subtitles {\n                      id\n                      title\n                      language\n                      label\n                      url\n                      __typename\n                    }\n                    __typename\n                  }\n                  showAssociatedText\n                  associatedText\n                  associatedTextPosition\n                  associatedTextWidth\n                  __typename\n                }\n                ... on LearningResource {\n                  title\n                  url\n                  __typename\n                }\n                __typename\n              }\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n\nfragment PageCardReferenceFragment on CardReference {\n  title\n  isexpandable\n  showSecondaryContent\n  secondaryContentPosition {\n    width\n    position\n    __typename\n  }\n  secondaryComponents {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      associatedContentPosition\n      associatedContentWidth\n      showAssociatedContent\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        contentType\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  components {\n    ... on InlineText {\n      text\n      __typename\n    }\n    ... on TextReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on QuestionReference {\n      question {\n        id\n        question\n        questionType\n        submittedAnswers(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        answers {\n          id\n          answer\n          isCorrectResponse\n          explanation\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on SurveyQuestionReference {\n      surveyQuestion {\n        id\n        question\n        submittedAnswer(pageProgressId: $pageProgressId) {\n          id\n          __typename\n        }\n        surveyAnswers {\n          id\n          choiceText\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on QuoteReference {\n      text\n      attribution\n      __typename\n    }\n    ... on TestimonialReference {\n      text\n      authors {\n        authorName\n        __typename\n      }\n      __typename\n    }\n    ... on TipReference {\n      text\n      emphasis\n      __typename\n    }\n    ... on ImageReference {\n      url\n      title\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      showAssociatedContent\n      associatedContentPosition\n      associatedContentWidth\n      associatedContent {\n        type\n        ... on InlineText {\n          text\n          __typename\n        }\n        ... on TextReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on QuestionReference {\n          question {\n            id\n            question\n            questionType\n            explanation\n            submittedAnswers(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            answers {\n              id\n              answer\n              isCorrectResponse\n              explanation\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on SurveyQuestionReference {\n          surveyQuestion {\n            id\n            question\n            submittedAnswer(pageProgressId: $pageProgressId) {\n              id\n              __typename\n            }\n            surveyAnswers {\n              id\n              choiceText\n              value\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        ... on QuoteReference {\n          text\n          attribution\n          __typename\n        }\n        ... on TestimonialReference {\n          text\n          authors {\n            authorName\n            __typename\n          }\n          __typename\n        }\n        ... on TipReference {\n          text\n          emphasis\n          __typename\n        }\n        ... on ImageReference {\n          url\n          title\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on VideoReference {\n          video {\n            id\n            fileUrl\n            title\n            thumbnailUrl\n            contentType\n            subtitles {\n              id\n              title\n              language\n              label\n              url\n              __typename\n            }\n            __typename\n          }\n          showAssociatedText\n          associatedText\n          associatedTextPosition\n          associatedTextWidth\n          __typename\n        }\n        ... on LearningResource {\n          title\n          url\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    ... on VideoReference {\n      video {\n        id\n        fileUrl\n        title\n        thumbnailUrl\n        showAssociatedContent\n        associatedContentPosition\n        associatedContentWidth\n        associatedContent {\n          type\n          ... on InlineText {\n            text\n            __typename\n          }\n          ... on TextReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on QuestionReference {\n            question {\n              id\n              question\n              questionType\n              explanation\n              submittedAnswers(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              answers {\n                id\n                answer\n                isCorrectResponse\n                explanation\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on SurveyQuestionReference {\n            surveyQuestion {\n              id\n              question\n              submittedAnswer(pageProgressId: $pageProgressId) {\n                id\n                __typename\n              }\n              surveyAnswers {\n                id\n                choiceText\n                value\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          ... on QuoteReference {\n            text\n            attribution\n            __typename\n          }\n          ... on TestimonialReference {\n            text\n            authors {\n              authorName\n              __typename\n            }\n            __typename\n          }\n          ... on TipReference {\n            text\n            emphasis\n            __typename\n          }\n          ... on ImageReference {\n            url\n            title\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on VideoReference {\n            video {\n              id\n              fileUrl\n              title\n              thumbnailUrl\n              contentType\n              subtitles {\n                id\n                title\n                language\n                label\n                url\n                __typename\n              }\n              __typename\n            }\n            showAssociatedText\n            associatedText\n            associatedTextPosition\n            associatedTextWidth\n            __typename\n          }\n          ... on LearningResource {\n            title\n            url\n            __typename\n          }\n          __typename\n        }\n        contentType\n        subtitles {\n          id\n          title\n          language\n          label\n          url\n          __typename\n        }\n        __typename\n      }\n      showAssociatedText\n      associatedText\n      associatedTextPosition\n      associatedTextWidth\n      __typename\n    }\n    ... on LearningResource {\n      title\n      url\n      __typename\n    }\n    __typename\n  }\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[11]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    status\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        description\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        description\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        id\n        title\n        description\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[12]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="FinishTheExamClickOnSubmit" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;submitPageQuestionAnswer&quot;,&quot;variables&quot;:{&quot;answerIds&quot;:[&quot;5b02870a-8201-4dac-aa90-0da492d4908d&quot;],&quot;pageProgressId&quot;:&quot;9c16bdad-2353-4f7c-aa2a-3ab07363b79a&quot;,&quot;questionId&quot;:&quot;23cddf16-32fe-4ffb-b7d2-26ae0d6bf731&quot;},&quot;query&quot;:&quot;mutation submitPageQuestionAnswer($answerIds: [ID!]!, $pageProgressId: ID!, $questionId: ID!) {\n  submitPageQuestionAnswer(input: {answerIds: $answerIds, pageProgressId: $pageProgressId, questionId: $questionId}) {\n    errorMessages\n    success\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;CompletePage&quot;,&quot;variables&quot;:{&quot;levelOneCollectionProgressId&quot;:&quot;82b3a185-bd20-4af5-aef9-00cd2412c3a9&quot;,&quot;pageProgressId&quot;:&quot;9c16bdad-2353-4f7c-aa2a-3ab07363b79a&quot;,&quot;courseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;,&quot;questionId&quot;:&quot;23cddf16-32fe-4ffb-b7d2-26ae0d6bf731&quot;},&quot;query&quot;:&quot;mutation CompletePage($levelOneCollectionProgressId: ID!, $pageProgressId: ID!, $courseId: ID!, $questionId: ID) {\n  completePage(input: {levelOneCollectionProgressId: $levelOneCollectionProgressId, pageProgressId: $pageProgressId, courseId: $courseId, questionId: $questionId}) {\n    errorMessages\n    success\n    nextPageProgressId\n    shouldRedirectToNextLevelOneCollection\n    nextLevelTwoLevelOneCollectionId\n    nextLevelTwoCollectionProgressId\n    isAllCoreContentCompletedAndNoEnrichmentStart\n    nextLearnPath\n    examUrl\n    course {\n      id\n      userActivityPoints\n      completedPercentage\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;productExperienceSurveyProgress&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query productExperienceSurveyProgress {\n  productExperienceSurveyProgress {\n    id\n    status\n    remindMeAt\n    shouldForceUserToTakeSurvey\n    isProductExperienceEnabled\n    productExperienceSurvey {\n      id\n      surveyQuestions {\n        id\n        title\n        surveyAnswers {\n          id\n          title\n          value\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;vibLevelThreeCollectionCourse&quot;,&quot;variables&quot;:{&quot;vibLevelThreeCollectionCourseId&quot;:&quot;8daecca7-486c-4ec3-acab-ab8f225de21c&quot;,&quot;vibLevelThreeLevelTwoCollectionId&quot;:&quot;77ab9b54-888d-4c28-b9a7-a6b295e28572&quot;},&quot;query&quot;:&quot;query vibLevelThreeCollectionCourse($vibLevelThreeCollectionCourseId: ID!, $vibLevelThreeLevelTwoCollectionId: ID!) {\n  vibLevelThreeCollectionCourse(vibLevelThreeCollectionCourseId: $vibLevelThreeCollectionCourseId) {\n    id\n    previousCompletedLevelTwoCollection(vibLevelThreeLevelTwoCollectionId: $vibLevelThreeLevelTwoCollectionId) {\n      id\n      title\n      outroText\n      activityPoints\n      __typename\n    }\n    levelThreeCourse {\n      id\n      title\n      courseId\n      canStartCourse\n      isCourseEnabled\n      hasSeniorLeaderMessage\n      coreLevelTwoCollectionCount\n      enrichmentLevelTwoCollectionCount\n      isAllCoreContentCompleted\n      hasEnrichmentStarted\n      image {\n        id\n        url\n        title\n        __typename\n      }\n      assessment {\n        id\n        title\n        activityPoints\n        __typename\n      }\n      userCourseProgress {\n        id\n        status\n        __typename\n      }\n      jumpBackIn(vibLevelThreeCollectionCourseId: $vibLevelThreeCollectionCourseId, vibLevelThreeLevelTwoCollectionId: $vibLevelThreeLevelTwoCollectionId) {\n        courseId\n        courseTitle\n        levelTwoCollectionId\n        levelTwoCollectionTitle\n        levelTwoCollectionDescription\n        levelTwoCollectionDescriptionTitle\n        levelOneCollectionCount\n        levelTwoCollectionIntroText\n        completedLevelOneCollectionCount\n        jumpBackInTitle\n        jumpBackInDesc\n        jumpBackInPath\n        __typename\n      }\n      courseLevelThreeCollections {\n        id\n        contentType\n        isUserAllowToVisit(vibLevelThreeCollectionCourseId: $vibLevelThreeCollectionCourseId, vibLevelThreeLevelTwoCollectionId: $vibLevelThreeLevelTwoCollectionId)\n        levelThreeCollection {\n          id\n          levelThreeLevelTwoCollections {\n            id\n            position\n            levelTwoCollection {\n              id\n              title\n              description\n              introText\n              outroText\n              activityPoints\n              levelOneCollectionsCount\n              firstLevelTwoLevelOneCollection {\n                id\n                __typename\n              }\n              levelOneCollections {\n                id\n                title\n                description\n                __typename\n              }\n              exam {\n                id\n                title\n                __typename\n              }\n              image {\n                id\n                url\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        levelThreeCollectionProgress {\n          id\n          status\n          levelTwoCollectionProgresses {\n            id\n            status\n            levelTwoCollectionId\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      __typename\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;SessionGetCurrentUserWithEnableFeatures&quot;,&quot;variables&quot;:{},&quot;query&quot;:&quot;query SessionGetCurrentUserWithEnableFeatures {\n  currentUser {\n    ...UserFragment\n    __typename\n  }\n  enabledFeatures {\n    featureList\n    __typename\n  }\n  globalSetting {\n    termsPageBlogId\n    privacyPageBlogId\n    __typename\n  }\n  formattedRailsAppName\n}\n\nfragment UserFragment on User {\n  id\n  fullName\n  firstName\n  lastName\n  isManager\n  accountImageUrl\n  accountIconUrl\n  languagePreference\n  accountId\n  accountName\n  userIdentity\n  managerUserId\n  managerName\n  hasTerritory\n  isSupervisor\n  isAllowedForTeamPage\n  isAllowedForClientAdminPage\n  todayActivityStats {\n    isTrackedFromFrontEndPageView\n    isTrackedFromSfdcSalesToolsPageView\n    __typename\n  }\n  profilePictureUrl\n  isManagerOfManager\n  userProfile {\n    id\n    course {\n      id\n      title\n      levelCourseType\n      outlineUrl\n      activityStatus\n      userActivityPoints\n      isFirstLevelOneCollectionCompletedByUser\n      userCoursePractice {\n        id\n        __typename\n      }\n      selectedGoals {\n        id\n        title\n        __typename\n      }\n      isCourseEnabled\n      courseProgress {\n        canUserSeeNpsSurvey\n        __typename\n      }\n      status\n      __typename\n    }\n    __typename\n  }\n  isClientAdmin\n  __typename\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/api/graphql" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;operationName&quot;:&quot;VibGetCourseSyllabus&quot;,&quot;variables&quot;:{&quot;vibCourseId&quot;:&quot;42ca9c07-6635-4af7-a2bb-69538a20a25c&quot;},&quot;query&quot;:&quot;query VibGetCourseSyllabus($vibCourseId: ID!) {\n  actionPlanTasks(vibCourseId: $vibCourseId) {\n    id\n    key\n    title\n    status\n    url\n    __typename\n  }\n  cmsCourse(vibCourseId: $vibCourseId) {\n    id\n    status\n    title\n    courseProgress {\n      id\n      status\n      __typename\n    }\n    jumpBackIn {\n      courseId\n      courseTitle\n      levelTwoCollectionId\n      levelTwoCollectionTitle\n      levelOneCollectionCount\n      completedLevelOneCollectionCount\n      jumpBackInTitle\n      jumpBackInDesc\n      jumpBackInPath\n      __typename\n    }\n    canStartCourse\n    isCourseEnabled\n    levelCourse {\n      id\n      __typename\n      ... on LevelFourCourse {\n        id\n        title\n        description\n        coreLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelFourCollectionCourses {\n          id\n          levelFourCollectionProgress {\n            id\n            status\n            levelThreeCollectionProgresses {\n              id\n              status\n              levelThreeCollectionId\n              levelTwoCollectionProgresses {\n                id\n                status\n                levelTwoCollectionId\n                levelTwoLearnPageUrl\n                levelOneCollectionProgresses {\n                  id\n                  status\n                  levelOneCollectionId\n                  lessonPageUrl\n                  __typename\n                }\n                levelTwoCollectionExamUserProgress {\n                  id\n                  status\n                  examUrl\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelFourCollection {\n            id\n            title\n            description\n            levelFourLevelThreeCollections {\n              id\n              levelThreeCollection {\n                id\n                title\n                description\n                levelThreeLevelTwoCollections {\n                  id\n                  levelTwoCollection {\n                    id\n                    title\n                    description\n                    levelOneCollections {\n                      id\n                      title\n                      description\n                      __typename\n                    }\n                    exam {\n                      id\n                      title\n                      __typename\n                    }\n                    __typename\n                  }\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelThreeCourse {\n        id\n        title\n        description\n        coreLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelThreeCollectionCourses {\n          id\n          levelThreeCollectionProgress {\n            id\n            status\n            levelTwoCollectionProgresses {\n              id\n              status\n              levelTwoCollectionId\n              levelTwoLearnPageUrl\n              levelOneCollectionProgresses {\n                id\n                status\n                levelOneCollectionId\n                lessonPageUrl\n                __typename\n              }\n              levelTwoCollectionExamUserProgress {\n                id\n                status\n                examUrl\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          levelThreeCollection {\n            id\n            title\n            description\n            levelThreeLevelTwoCollections {\n              id\n              levelTwoCollection {\n                id\n                title\n                description\n                levelOneCollections {\n                  id\n                  title\n                  description\n                  __typename\n                }\n                exam {\n                  id\n                  title\n                  __typename\n                }\n                __typename\n              }\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n      ... on LevelTwoCourse {\n        id\n        title\n        description\n        coreLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoCollectionId\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        enrichmentLevelTwoCollectionCourses {\n          id\n          levelTwoCollectionProgress(vibCourseId: $vibCourseId) {\n            id\n            status\n            levelTwoLearnPageUrl\n            levelOneCollectionProgresses {\n              id\n              status\n              levelOneCollectionId\n              lessonPageUrl\n              __typename\n            }\n            levelTwoCollectionExamUserProgress {\n              id\n              status\n              examUrl\n              __typename\n            }\n            __typename\n          }\n          levelTwoCollection {\n            id\n            title\n            description\n            levelTwoLevelOneCollections {\n              id\n              levelOneCollection {\n                id\n                title\n                description\n                __typename\n              }\n              __typename\n            }\n            exam {\n              id\n              title\n              __typename\n            }\n            __typename\n          }\n          __typename\n        }\n        __typename\n      }\n    }\n    __typename\n  }\n}\n&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/graphql</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-CSRF-Token" elementType="Header">
                  <stringProp name="Header.name">X-CSRF-Token</stringProp>
                  <stringProp name="Header.value">EbB5sa3CC3QosonyiCss1C40jRhMZgq2kuu7jzVExizmv55XIl4p2YMapG_3BusZPgxbzAMHmxcxu2cBBpiAoQ</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="ClickOnReturnAfterCompletingExam" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin/users/impersonate" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_method</stringProp>
                  <stringProp name="Argument.value">delete</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                  <stringProp name="Argument.value">0kYBIfHaqURlBY_f5GzKznTV_4cS7mKNYPodplwMKGwuMZ1ZYXczX7NRF-f18P7F7wXr8GjQjeLffJG1iKDPxQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">admin/users/impersonate</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>99046.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">49523</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 99046 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="LogoutAdminUser" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://acme-vib-exp.platform.spisales.com/admin_users/sign_out" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="_method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_method</stringProp>
                  <stringProp name="Argument.value">delete</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="authenticity_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">authenticity_token</stringProp>
                  <stringProp name="Argument.value">qKt8WqyXC7xklXkr5yvpkgrh1QAcAbmSXdzkX3xed_FfpJu8IwspEc89VLaYBi5fGtkD1FNgKDP-jDjRT4IxfA</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">admin_users/sign_out</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>13848.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">6924</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 13848 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
